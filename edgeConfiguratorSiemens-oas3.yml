openapi: 3.0.0
info:
  title: edgeConfiguratorSiemens API
  description: >-
    The edgeConfigurator allows remote configuration of the edgeConnector
    product family.
  version: '2.0'
servers:
  - url: '{protocol}://{environment}:{port}'
    description: edgeConfiguratorSiemens
    variables:
      protocol:
        default: http
        enum:
          - http
          - https
      environment:
        default: localhost
        enum:
          - localhost
        description: >-
          The environment depends on the host or container which runs the
          application
      port:
        default: '3000'
        enum:
          - '3000'
          - '4000'
        description: Use port 443 (container internal port) for https, 8099 for http
security:
  - bearerAuth: []
tags:
  - name: Configurator_Authentication
  - name: Configurator_User_Management
  - name: Configurator_On_Premise
  - name: Configurator_Cloud
  - name: Uacore_Sights_Node_Filter_Definition
  - name: Uacore_Subscriptions_And_Monitored_Items_Options
  - name: Opcuaserver_Unsuccessful_Auth_Attempts
  - name: Opcuaserver_Temporary_PKI_Management
  - name: Core_System
  - name: Core_Trace
  - name: Core_User_Certificate_Management
  - name: Core_User_Management
  - name: Core_Version
  - name: Core_Support_Data
paths:
  /auth:
    post:
      tags:
        - Configurator_Authentication
      description: Logging in the user based on credentials.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credentials'
      responses:
        '201':
          description: Created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /auth/refresh-token:
    post:
      tags:
        - Configurator_Authentication
      description: Refresh the access token.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshToken'
      responses:
        '201':
          description: Created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /users:
    get:
      tags:
        - Configurator_User_Management
      description: Returns a list with all matched users.
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersToGet'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '403':
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      security:
        - bearerAuth: []
    post:
      tags:
        - Configurator_User_Management
      description: Creates a new user.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserToPost'
      responses:
        '201':
          description: Created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserId'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '403':
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      security:
        - bearerAuth: []
  /users/{user_id}:
    get:
      tags:
        - Configurator_User_Management
      description: Return a specific user.
      parameters:
        - in: path
          name: user_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserToGet'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '403':
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      security:
        - bearerAuth: []
    put:
      tags:
        - Configurator_User_Management
      description: Update a specific user.
      parameters:
        - in: path
          name: user_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserToPost'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserId'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '403':
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      security:
        - bearerAuth: []
    patch:
      tags:
        - Configurator_User_Management
      description: Update a specific user.
      parameters:
        - in: path
          name: user_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserToPatch'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserId'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '403':
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      security:
        - bearerAuth: []
    delete:
      tags:
        - Configurator_User_Management
      description: Deletes a specific user.
      parameters:
        - in: path
          name: user_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserId'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '403':
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      security:
        - bearerAuth: []
  /configuration:
    get:
      tags:
        - Configurator_On_Premise
        - Configurator_Cloud
      description: >-
        Retrieve the configuration of edgeConfigurator on-premise or
        edgeConfigurator cloud depends from where the call was made.
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/ConfigurationCloud'
                  - $ref: '#/components/schemas/ConfigurationOnPremise'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '403':
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    patch:
      tags:
        - Configurator_On_Premise
        - Configurator_Cloud
      description: >-
        Update the configuration of the edgeConfigurator on-premise or
        edgeConfigurator cloud depends from where the call was made.
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
                - $ref: '#/components/schemas/ConfigurationCloud'
                - $ref: '#/components/schemas/ConfigurationOnPremise'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/ConfigurationCloud'
                  - $ref: '#/components/schemas/ConfigurationOnPremise'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '403':
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors:
    get:
      tags:
        - Configurator_Cloud
        - Configurator_On_Premise
      description: Retrieve a list of all the edgeConnectors.
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/ResponseGetConnectorsCloud'
                  - $ref: '#/components/schemas/ResponseGetConnectorsOnPremise'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '403':
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    post:
      tags:
        - Configurator_Cloud
        - Configurator_On_Premise
      description: Add a new edgeConnector instance.
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
                - $ref: '#/components/schemas/RequestConnectorCloud'
                - $ref: '#/components/schemas/RequestConnectorOnPremise'
      responses:
        '201':
          description: Created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseNoGetMet'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '403':
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}:
    get:
      tags:
        - Configurator_Cloud
        - Configurator_On_Premise
      description: Retrieve an edgeConnector based on its id.
      parameters:
        - in: path
          name: edgeConnector_ID
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/ConnectorCloud'
                  - $ref: '#/components/schemas/ConnectorOnPremise'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '403':
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    put:
      tags:
        - Configurator_Cloud
        - Configurator_On_Premise
      description: Update a specific edgeConnector based on its id.
      parameters:
        - in: path
          name: edgeConnector_ID
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
                - $ref: '#/components/schemas/RequestConnectorCloud'
                - $ref: '#/components/schemas/RequestConnectorOnPremise'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseNoGetMet'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '403':
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    patch:
      tags:
        - Configurator_Cloud
        - Configurator_On_Premise
      description: Update a specific edgeConnector based on its id.
      parameters:
        - in: path
          name: edgeConnector_ID
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
                - $ref: '#/components/schemas/RequestConnectorCloud'
                - $ref: '#/components/schemas/RequestConnectorOnPremise'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseNoGetMet'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '403':
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    delete:
      tags:
        - Configurator_Cloud
        - Configurator_On_Premise
      description: Deletes a specific edgeConnector based on its id.
      parameters:
        - in: path
          name: edgeConnector_ID
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseNoGetMet'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '403':
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /remotes:
    get:
      tags:
        - Configurator_Cloud
      description: Retrieve a list with all the edgeConfigurators on-premise.
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Remotes'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '403':
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    post:
      tags:
        - Configurator_Cloud
      description: Add a new edgeConfigurator on-premise instance.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestRemote'
      responses:
        '201':
          description: Created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseNoGetMet'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '403':
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /remotes/{remote_ID}:
    get:
      tags:
        - Configurator_Cloud
      description: Retrieve the specific edgeConfigurator on-premise based on its id.
      parameters:
        - in: path
          name: remote_ID
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Remote'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '403':
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    put:
      tags:
        - Configurator_Cloud
      description: Update a specific edgeConfigurator on-premise based on its id.
      parameters:
        - in: path
          name: remote_ID
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestRemote'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseNoGetMet'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '403':
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    patch:
      tags:
        - Configurator_Cloud
      description: Update a specific edgeConfigurator on-premise based on its id.
      parameters:
        - in: path
          name: remote_ID
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestRemote'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseNoGetMet'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '403':
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    delete:
      tags:
        - Configurator_Cloud
      description: Deletes a specific edgeConfigurator on-premise based on its id.
      parameters:
        - in: path
          name: remote_ID
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseNoGetMet'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '403':
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /remotes/{remote_ID}/synchronize:
    post:
      tags:
        - Configurator_Cloud
      description: >-
        Synchronize the configured connectors between the cloud and on premise
        edgeConfigurator.
      parameters:
        - in: path
          name: remote_ID
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRemoteSynchronize'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '403':
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /remotes/{remote_ID}/configuration:
    get:
      tags:
        - Configurator_Cloud
      description: >-
        Retrieve the specific configuration of edgeConfigurator on-premise based
        on its id.
      parameters:
        - in: path
          name: remote_ID
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationOnPremise'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '403':
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    patch:
      tags:
        - Configurator_Cloud
      description: >-
        Update a specific configuration of edgeConfigurator on-premise based on
        its id.
      parameters:
        - in: path
          name: remote_ID
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationOnPremise'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationOnPremise'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '403':
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/core/trace:
    get:
      tags:
        - Core_Trace
      description: Get general trace settings.
      responses:
        '200':
          description: Ok.
          content:
            application/json:
              schema:
                type: object
                properties:
                  traceToFile:
                    type: boolean
                  traceFileNumber:
                    type: integer
                  traceFileSize:
                    type: integer
                  traceMinFilesNumber:
                    type: integer
                  traceMaxFilesNumber:
                    type: integer
                  traceMinFileSize:
                    type: integer
                  traceMaxFileSize:
                    type: integer
                  traceToTCP:
                    type: boolean
                  traceTCPPort:
                    type: integer
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
    post:
      tags:
        - Core_Trace
      description: >-
        Change general trace settings. TCP related settings are not used for
        now.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                traceToFile:
                  type: boolean
                traceFileNumber:
                  type: integer
                traceFileSize:
                  type: integer
                traceToTCP:
                  type: boolean
                traceTCPPort:
                  type: integer
        required: true
      responses:
        '200':
          description: Ok.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/core/trace/topic:
    get:
      tags:
        - Core_Trace
      description: Get trace levels of the trace topics
      responses:
        '200':
          description: Ok.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    topic:
                      type: string
                    level:
                      type: string
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
    post:
      tags:
        - Core_Trace
      description: >-
        Set trace levels of the trace topics. Only the levels of the topics
        which should be changed have to be included in the request.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  topic:
                    type: string
                  level:
                    type: string
        required: true
      responses:
        '200':
          description: Ok.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/core/trace/component:
    get:
      tags:
        - Core_Trace
      description: Get components and their enabled state
      responses:
        '200':
          description: Ok.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    module:
                      type: string
                    enabled:
                      type: boolean
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
    post:
      tags:
        - Core_Trace
      description: >-
        Set enabled state of the components. Only the modules of the enabled
        state should be changed have to be included in the request.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  module:
                    type: string
                  enabled:
                    type: boolean
        required: true
      responses:
        '200':
          description: Ok.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/core/trace/level:
    get:
      tags:
        - Core_Trace
      description: >-
        Get trace level of all the trace topics. Returns the HTTP error 500 if
        the trace level is not the same for all trace topics.
      responses:
        '200':
          description: Ok.
          content:
            application/json:
              schema:
                type: object
                properties:
                  level:
                    type: string
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
    post:
      tags:
        - Core_Trace
      description: Set trace levels of the all trace topics
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                level:
                  type: string
        required: true
      responses:
        '200':
          description: Ok.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/core/users:
    get:
      tags:
        - Core_User_Management
      description: This operation provides a summary data of all users.
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/coreUsers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '410':
          description: Gone.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
    post:
      tags:
        - Core_User_Management
      description: >-
        Add a new user to the system. Note that if a "pkiSessionId" is
        specified, it must be a temporary PKI created with no associated user.
        The content of that PKI will be set as the certificates identifying the
        newly created user. The pkiSessionId wil be invalidated by this call.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/coreUserToCreate'
        required: true
      responses:
        '200':
          description: Created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/coreIdModel'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/core/users/{user_id}:
    get:
      tags:
        - Core_User_Management
      description: Returns detailed information on the specified user.
      parameters:
        - in: path
          name: user_id
          description: The value from the example is the admin's user id.
          schema:
            type: string
            example: 396cd7a3-d171-40d5-9922-530a4cb62633
          required: true
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/coreUserToRetrieve'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    put:
      tags:
        - Core_User_Management
      description: >-
        Modifies details of the specified user. Only the specified values will
        be modified in the backend. In addition to administrator, the user
        itself is allowed to set the details. Note that if a "pkiSessionId" is
        specified, it must be a temporary PKI created for the user being edited.
        The content of that PKI will be set as the certificates identifying that
        user. The pkiSessionId wil be invalidated by this call.
      parameters:
        - in: path
          name: user_id
          schema:
            type: string
          required: true
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/coreUserToModify'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    delete:
      tags:
        - Core_User_Management
      description: Delete the user.
      parameters:
        - in: path
          name: user_id
          schema:
            type: string
          required: true
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/core/users/{user_id}/groups:
    get:
      tags:
        - Core_User_Management
      description: >-
        Returns the group names the specified user name is part of. An
        authenticated user can call this command for itself even if it is not
        Administrator.
      parameters:
        - in: path
          name: user_id
          schema:
            type: string
          required: true
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/coreUserPartOfGroupsToRetrieve'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    put:
      tags:
        - Core_User_Management
      description: >-
        Modifies the assignement of the specified user to the groups identified
        by value of the key „name“. The boolean value of key „assign“ specified
        wether the user is to be assigned/de-assigned to/from the named group.
        The assignement relationship of the user to the groups which are not
        mentioned in the json remain unchanged.
      parameters:
        - in: path
          name: user_id
          schema:
            type: string
          required: true
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/coreUserPartOfGroupsToModify'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/core/users/{user_id}/usage:
    get:
      tags:
        - Core_User_Management
      description: >-
        Returns the context in which the the specified user name is used. The
        “context” means a list of entities specified by their names, grouped
        under a context-type.
      parameters:
        - in: path
          name: user_id
          schema:
            type: string
          required: true
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/coreUserContextToRetrieve'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/core/users/{user_id}/description:
    post:
      tags:
        - Core_User_Management
      description: Change user description.
      parameters:
        - in: path
          name: user_id
          schema:
            type: string
          required: true
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/coreUserDescription'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/core/groups:
    get:
      tags:
        - Core_Group_Management
      description: Get data of all groups.
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/coreGroupsToRetrieve'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
    post:
      tags:
        - Core_Group_Management
      description: Create a new group - not needed for Raven Rev1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/coreGroupToCreate'
        required: true
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/core/groups/{group_name}:
    put:
      tags:
        - Core_Group_Management
      description: >-
        Create a new group. The name of the new group shall be part of the URI
        (see <group name>).
      parameters:
        - in: path
          name: group_name
          schema:
            type: string
          required: true
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    delete:
      tags:
        - Core_Group_Management
      description: Delete the group.
      parameters:
        - in: path
          name: group_name
          schema:
            type: string
          required: true
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/core/groups/{group_name}/users:
    get:
      tags:
        - Core_Group_Management
      description: Get data of all users of the group.
      parameters:
        - in: path
          name: group_name
          schema:
            type: string
          required: true
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/coreUsersFromGroupToRetrieve'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    post:
      tags:
        - Core_Group_Management
      description: Add a user to the group.
      parameters:
        - in: path
          name: group_name
          schema:
            type: string
          required: true
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/coreUserAddedToGroup'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/core/groups/{group_name}/users/{user_id}:
    delete:
      tags:
        - Core_Group_Management
      description: Delete a user from the group.
      parameters:
        - in: path
          name: user_id
          schema:
            type: string
          required: true
        - in: path
          name: group_name
          schema:
            type: string
          required: true
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '405':
          description: Method is not allowed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/core/edit-user-certificates:
    post:
      tags:
        - Core_User_Certificate_Management
      description: >-
        Creates a temporary PKI for the user certificates - associated to the
        specified user, or for a user that will be created if the given user is
        null. The content is copied from the specified user. Note that if there
        is already a temporary PKI associated to the specified user, that PKI
        will be deleted.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/coreEditUserCertificateRequest'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/coreEditUserCertificateRespons'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/core/edit-user-certificates/{session_GUID}:
    delete:
      tags:
        - Core_User_Certificate_Management
      description: >-
        Deletes the specified temporary PKI (so all changes on it are
        cancelled).
      parameters:
        - in: path
          name: session_GUID
          schema:
            type: string
          required: true
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/core/edit-user-certificates/{session-GUID}/prepare-upload:
    post:
      tags:
        - Core_User_Certificate_Management
      description: >-
        Set the certificate additional data for the next certificate or PFX
        upload.
      parameters:
        - in: path
          name: session-GUID
          schema:
            type: string
          required: true
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/coreEditUserCertificateUploadRequest'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/core/edit-user-certificates/{session-GUID}/certificates:
    get:
      tags:
        - Core_User_Certificate_Management
      description: Returns details of all certificates (associated to the current user).
      parameters:
        - in: path
          name: session-GUID
          schema:
            type: string
          required: true
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/coreCertificatesDetailsResponse'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    post:
      tags:
        - Core_User_Certificate_Management
      description: >-
        Uploads a certificate (DER or PEM format) or a PFX containing a
        certificate and the corresponding private key. The certificate will have
        the description set in a previous call to
        runtime/core/edit-user-certificate/<session-GUID>/prepare-upload. Also,
        if a PFX is uploaded, the password set in the previous call is used to
        decrypt the private key from that PFX.
      parameters:
        - in: path
          name: session-GUID
          schema:
            type: string
          required: true
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              $ref: '#/components/schemas/coreFileModel'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/core/edit-user-certificates/{session-GUID}/private-key:
    put:
      tags:
        - Core_User_Certificate_Management
      description: >-
        Uploads the private key  for the previously uploaded certificate (in DER
        or PEM format). The call must be subsequent to a previous call to
        runtime/core/edit-user-certificate/<session-GUID>/certificate with a
        valid DER or PEM certificate content. It also must be done in the same
        session of certificate editing. The password provided in a previous call
        to runtime/core/edit-user-certificate/<session-GUID>/prepare-upload will
        be used to decrypt the private key.
      parameters:
        - in: path
          name: session-GUID
          schema:
            type: string
          required: true
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              $ref: '#/components/schemas/coreFileModel'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/core/edit-user-certificates/{session-GUID}/certificates/{thumbprint}:
    get:
      tags:
        - Core_User_Certificate_Management
      description: Returns details of the selected user certificate.
      parameters:
        - in: path
          name: session-GUID
          schema:
            type: string
          required: true
        - in: path
          name: thumbprint
          schema:
            type: string
          required: true
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/coreCertificateDetails'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    delete:
      tags:
        - Core_User_Certificate_Management
      description: Deletes the certificate.
      parameters:
        - in: path
          name: session-GUID
          schema:
            type: string
          required: true
        - in: path
          name: thumbprint
          schema:
            type: string
          required: true
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/core/edit-user-certificates/{session-GUID}/certificates/{thumbprint}/certificate-der:
    get:
      tags:
        - Core_User_Certificate_Management
      description: Returns the selected certificate, in DER format.
      parameters:
        - in: path
          name: session-GUID
          schema:
            type: string
          required: true
        - in: path
          name: thumbprint
          schema:
            type: string
          required: true
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/coreFileModel'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/core/edit-user-certificates/{session-GUID}/certificates/{thumbprint}/certificate-pem:
    get:
      tags:
        - Core_User_Certificate_Management
      description: Returns the selected certificate, in PEM format.
      parameters:
        - in: path
          name: session-GUID
          schema:
            type: string
          required: true
        - in: path
          name: thumbprint
          schema:
            type: string
          required: true
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/coreFileModel'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/core/edit-user-certificates/{session-GUID}/certificates/{thumbprint}/certificate-pfx:
    get:
      tags:
        - Core_User_Certificate_Management
      description: >-
        Returns the selected certificate and its corresponding private key, in
        PFX format.
      parameters:
        - in: path
          name: session-GUID
          schema:
            type: string
          required: true
        - in: path
          name: thumbprint
          schema:
            type: string
          required: true
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/coreFileModel'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/core/edit-user-certificates/{session_GUID}/certificate-generate:
    post:
      tags:
        - Core_User_Certificate_Management
      description: Creates a new certificate with private key for the specified user.
      parameters:
        - in: path
          name: session_GUID
          schema:
            type: string
          required: true
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/coreCertificateToCreate'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/core/edit-user-certificates/{session_GUID}/set-default-outgoing:
    post:
      tags:
        - Core_User_Certificate_Management
      description: >-
        Sets the default certificate to be used for outgoing UA connections. The
        value for „default-outgoing“ must be the thumbprint of one of the
        already existing certificates that also has the
        „is-private-key-available“ set on true. Setting „default-outgoing“ to
        null has the effect of making the user have no default certificate. BTW,
        deleting the currently set default certificate, or replacing it with a
        DER or PEM certificate-only (no private key available) also has the
        effect of making the user have no default certificate.
      parameters:
        - in: path
          name: session_GUID
          schema:
            type: string
          required: true
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/coreEditUserCertificateDefaultOutgoing'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/core/ldap/main/config:
    get:
      tags:
        - Core_Ldap_Auth_Management
      description: Return the current configuration for the main ldap servers.
      responses:
        '200':
          description: OK success.
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/LDAPConfigBody'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
    put:
      tags:
        - Core_Ldap_Auth_Management
      description: Modifies the configuration for the main ldap servers.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LDAPConfigPutBody'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/core/ldap/backup/config:
    get:
      tags:
        - Core_Ldap_Auth_Management
      description: Return the current configuration for the backup ldap servers.
      responses:
        '200':
          description: OK success.
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/LDAPConfigBody'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
    put:
      tags:
        - Core_Ldap_Auth_Management
      description: Modifies the configuration for the backup ldap servers.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LDAPConfigPutBody'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/core/ldap/main/test:
    post:
      tags:
        - Core_Ldap_Auth_Management
      description: >-
        Checks if a connection can be made with the ldap configuration for the
        main server.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LDAPConfigBody'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/core/ldap/backup/test:
    post:
      tags:
        - Core_Ldap_Auth_Management
      description: >-
        Checks if a connection can be made with the ldap configuration for the
        backup server.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LDAPConfigBody'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/core/ldap/edit-certificates:
    post:
      tags:
        - Core_Ldap_Auth_Management
      description: >-
        Creates a temporary PKI for the managing the LDAP certificates
        associated to the specified LDAP server ID. The content of the temprary
        PKI is copied from the specified server profile.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - profileName
              properties:
                profileName:
                  type: string
                  enum:
                    - main
                    - backup
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                type: object
                required:
                  - pkiSessionId
                properties:
                  pkiSessionId:
                    type: string
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/core/ldap/edit-certificates/{session-GUID}:
    delete:
      tags:
        - Core_Ldap_Auth_Management
      description: >-
        Deletes the specified temporary PKI (so all changes on it are
        cancelled).
      parameters:
        - in: path
          name: session-GUID
          schema:
            type: string
          required: true
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/core/ldap/edit-certificates/{session-GUID}/prepare-upload:
    post:
      tags:
        - Core_Ldap_Auth_Management
      description: >-
        Set the certificate password for the next certificate private key or PFX
        upload.
      parameters:
        - in: path
          name: session-GUID
          schema:
            type: string
          required: true
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - password
              properties:
                password:
                  type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/core/ldap/edit-certificates/{session-GUID}/certificates:
    get:
      tags:
        - Core_Ldap_Auth_Management
      description: >-
        Returns some details of the client certificate (associated to the
        current LDAP server PKI store).
      parameters:
        - in: path
          name: session-GUID
          schema:
            type: string
          required: true
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                type: object
                required:
                  - name
                  - validTo
                  - thumbprint
                properties:
                  name:
                    type: string
                  validTo:
                    type: string
                  thumbprint:
                    type: string
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    post:
      tags:
        - Core_Ldap_Auth_Management
      description: >-
        Uploads a certificate (DER or PEM format) or a PFX containing a
        certificate and the corresponding private key. The certificate will have
        the description set in a previous call to
        runtime/core/edit-user-certificate/<session-GUID>/prepare-upload.Also,
        if a PFX is uploaded, the password set in the previous call is used to
        decrypt the private key from that PFX.
      parameters:
        - in: path
          name: session-GUID
          schema:
            type: string
          required: true
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/core/ldap/edit-certificates/{session-GUID}/issuer:
    get:
      tags:
        - Core_Ldap_Auth_Management
      description: >-
        Returns some details of the client certificate (associated to the
        current LDAP server PKI store).
      parameters:
        - in: path
          name: session-GUID
          schema:
            type: string
          required: true
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                type: object
                required:
                  - name
                  - validTo
                  - thumbprint
                properties:
                  name:
                    type: string
                  validTo:
                    type: string
                  thumbprint:
                    type: string
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    post:
      tags:
        - Core_Ldap_Auth_Management
      description: >-
        Uploads a certificate (DER or PEM format) or a PFX containing a
        certificate and the corresponding private key. The certificate will have
        the description set in a previous call to
        runtime/core/edit-user-certificate/<session-GUID>/prepare-upload.Also,
        if a PFX is uploaded, the password set in the previous call is used to
        decrypt the private key from that PFX.
      parameters:
        - in: path
          name: session-GUID
          schema:
            type: string
          required: true
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/core/ldap/edit-certificates/{session-GUID}/private-key:
    put:
      tags:
        - Core_Ldap_Auth_Management
      description: >-
        Uploads the private key  for the previously uploaded certificate (in DER
        or PEM format). The call must be subsequent to a previous call to
        runtime/core/edit-user-certificate/<session-GUID>/certificate with a
        valid DER or PEM certificate content.It also must be done in the same
        session of certificate editing.The password provided in a previous call
        to runtime/core/edit-user-certificate/<session-GUID>/prepare-upload will
        be used to decrypt the private key.
      parameters:
        - in: path
          name: session-GUID
          schema:
            type: string
          required: true
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/core/ldap/edit-certificates/{session-GUID}/certificates/{thumbprint}:
    get:
      tags:
        - Core_Ldap_Auth_Management
      description: Returns details of the selected user certificate.
      parameters:
        - in: path
          name: session-GUID
          schema:
            type: string
          required: true
        - in: path
          name: thumbprint
          schema:
            type: string
          required: true
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                type: object
                required:
                  - applicationURL
                  - domain
                  - issuer
                  - keyUsages
                  - name
                  - serialNumber
                  - storePath
                  - subject
                  - subjectAlternativeName
                  - thumbprint
                  - validFrom
                  - validTo
                properties:
                  applicationURL:
                    type: string
                  domain:
                    type: string
                  issuer:
                    type: array
                    items:
                      type: object
                      required:
                        - name
                        - value
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                  keyUsages:
                    type: array
                    items:
                      type: string
                  name:
                    type: string
                  serialNumber:
                    type: string
                  storePath:
                    type: string
                  subject:
                    type: array
                    items:
                      type: object
                      required:
                        - name
                        - value
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                  subjectAlternativeName:
                    type: array
                    items:
                      type: string
                  thumbprint:
                    type: string
                  validFrom:
                    type: string
                  validTo:
                    type: string
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/core/system:
    get:
      tags:
        - Core_System
      description: Get the system status.The system status is either "running" or "halted".
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/coreSystemStatus'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/core/system/start:
    post:
      tags:
        - Core_System
      description: Start the system. Will set the system into "running" status.
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/core/system/stop:
    post:
      tags:
        - Core_System
      description: Stop the system. Will set the system into "halted" status.
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/core/system/restart:
    post:
      tags:
        - Core_System
      description: >-
        Restart the system (stop and then start again). Will set the system into
        "running" status.
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/core/system/netif:
    get:
      tags:
        - System
      description: >-
        Retrieves the network interfaces IP information. Later used to compute
        addresable endpoint URLs.
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/coreSystemNetif'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/core/logs:
    get:
      tags:
        - Core_Log_Files
      description: >-
        Get the existent .log files (including filename and last modified time)
        stored into the currently configured trace files location.
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/coreLogsModel'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/core/logs/{file_name}:
    get:
      tags:
        - Core_Log_Files
      description: >-
        Retrieves the content of the specified file_name.log if found in the
        currently configured trace files location.
      parameters:
        - in: path
          name: file_name
          schema:
            type: string
          required: true
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/coreFileModel'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/core/audit:
    get:
      tags:
        - Core_Audit_Log
      description: Get general audit log settings.
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/coreAuditLogSettingsToRetrieve'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
    post:
      tags:
        - Core_Audit_Log
      description: Change general audit log settings.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/coreAuditLogSettingsToSet'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/core/audit/files:
    get:
      tags:
        - Core_Audit_Log
      description: >-
        Get the existent .log files (including filename and last modified time)
        stored into the currently configured audit files location.
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/coreAuditFilesToRetrieve'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/core/audit/files/{file_name}:
    get:
      tags:
        - Core_Audit_Log
      description: >-
        Retrieves the content of the specified file_name.log if found in the
        currently configured audit files location.
      parameters:
        - in: path
          name: file_name
          schema:
            type: string
          required: true
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/coreFileModel'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/core/licensed-features:
    get:
      tags:
        - Core_License
      description: >-
        Get information about the installed licenses (features). The expiration
        value can be empty (unlimited license) or include the expiration date or
        not exist at all.
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/coreInstalledLicensesToRetrieve'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/core/license/details:
    get:
      tags:
        - Core_License
      description: Retrieve the license details. The system should be in running mode.
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/coreLicenseDetails'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/core/license/floatingserver:
    get:
      tags:
        - Core_License
      description: >-
        Retrieve the configured floating license servers (up to 3). The system
        should be in running mode.
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/coreFloatingServerToRetrieve'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
    post:
      tags:
        - Core_License
      description: >-
        Configured floating license servers (up to 3). The system should be in
        running mode.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/coreFloatingServerToConfigure'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/core/license/datapoints:
    get:
      tags:
        - Core_License
      description: >-
        Get the number of licensing datapoints to be reserved when the
        application is started.
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  reserved:
                    type: integer
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
    post:
      tags:
        - Core_License
      description: >-
        Set the number of licensing datapoints to be reserved when the
        application is started.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reserved:
                  type: integer
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/core/config-download:
    get:
      tags:
        - Core_Configuration_Download/Upload
      description: >-
        Get the server complete configuration archived in a zip file. Response
        content application/zip.
      responses:
        '200':
          description: OK success.
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/coreFileModel'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/core/config-duplicate:
    put:
      tags:
        - Core_Configuration_Download/Upload
      description: >-
        Import a zip file containing the configuration. It's using the duplicate
        of configuration option, does not override the IP settings, the device
        name and the licenses.
      requestBody:
        content:
          application/octet-stream:
            schema:
              $ref: '#/components/schemas/coreFileModel'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/core/config-restore:
    put:
      tags:
        - Core_Configuration_Download/Upload
      description: >-
        Import a zip file containing the configuration. It's using the restore
        of configuration option.
      requestBody:
        content:
          application/octet-stream:
            schema:
              $ref: '#/components/schemas/coreFileModel'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/core/config-factory-default:
    post:
      tags:
        - Core_Configuration_Download/Upload
      description: >-
        Restores the configuration to the factory default. It keeps (does not
        overwrite) however, the IP settings and the licenses.
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/core/config-predefined:
    get:
      tags:
        - Core_Configuration_Download/Upload
      description: Gets a list with pre-defined configurations.
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/coreConfigurationPredefinedToRetrieve'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/core/config-predefined/{name}:
    post:
      tags:
        - Core_Configuration_Download/Upload
      description: >-
        Restores the configuration to the named pre-defined one. Normally used
        for loading a “demo” configuration, from the product configuration. It
        keeps (does not overwrite) however, the IP settings and the licenses.
        Note that the names of predefined configurations, defined so far, are -
        FactoryDefaultConfig –> is the “normal”, clean factory defaults; note
        that using the mechanism described here does not delete the automatic
        configuration backups; MappedASDemoConfig –> is a demo configuration for
        demonstrating how the mapped address space feature works.
      parameters:
        - in: path
          name: name
          schema:
            type: string
          required: true
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/core/config-internal:
    get:
      tags:
        - Core_Configuration_Download/Upload
      description: Gets the list of available internal (automatic) backups.
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/coreConfigurationInternalToRetrieve'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/core/config-internal/{name}:
    get:
      tags:
        - Core_Configuration_Download/Upload
      description: Gets the zip containing the specified backup.
      parameters:
        - in: path
          name: name
          schema:
            type: string
          required: true
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/coreFileModel'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    delete:
      tags:
        - Core_Configuration_Download/Upload
      description: Deletes the specified internal backup.
      parameters:
        - in: path
          name: name
          schema:
            type: string
          required: true
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/core/config-internal/{name}/restore:
    post:
      tags:
        - Core_Configuration_Download/Upload
      description: Restores the configuration from the specified internal backup.
      parameters:
        - in: path
          name: name
          schema:
            type: string
          required: true
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/core/config-auto-backup-settings:
    get:
      tags:
        - Core_Configuration_Download/Upload
      description: Gets the settings for automatic backups.
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/coreConfigAutoBackupSettingsToRetrieve'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
    post:
      tags:
        - Core_Configuration_Download/Upload
      description: Sets the settings for automatic backups.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/coreConfigAutoBackupSettingsToSet'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/core/support-data/generate:
    post:
      tags:
        - Core_Support_Data
      description: >-
        Triggers the generation of the support data file as a zip archive and
        saves it in a temporary location.
      responses:
        '202':
          description: Accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '405':
          description: Method not allowed / Invalid input.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/core/support-data:
    get:
      tags:
        - Core_Support_Data
      description: Get the previously generated zip file.
      responses:
        '200':
          description: OK success.
          content:
            text/html:
              schema:
                type: string
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '405':
          description: Method not allowed / Invalid input.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '503':
          description: Service Unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/core/product-version:
    get:
      tags:
        - Core_Version
      description: >-
        Retrieves the product software version. Version format
        [MAJOR].[MINOR].[?SERVP].[BUILD] - 1.0.0.99
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/coreVersionToRetrieve'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/core/application-settings:
    get:
      tags:
        - Core_Application_Settings
      description: >-
        Retrieves a set of application settings.The default value for the
        "appName" attribute is based on the product type and it is one of the
        following set "edgeConnector 840D", "edgeConnector Siemens",
        "edgeConnector Modbus", "edgeAggregator". Member "countryCode"
        represents the 2-letter country code, as defined by ISO 3166-1.
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/coreApplicationSettingsToRetrieve'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
    post:
      tags:
        - Core_Application_Settings
      description: >-
        Set the application settings details. Only the attributes which should
        be changed have to be included in the request.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/coreApplicationSettingsToSet'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/httpua-server/browse:
    post:
      tags:
        - Browse_Nodes
      description: >-
        Issues a forward hierarchical browse transaction using the specified
        session type name. Returns the NodeId, DisplayName and NodeClass of the
        resulting nodes.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/httpuaserverBrowseRequest'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpuaserverBrowseResponse'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/mqtt/enabled:
    get:
      tags:
        - Mqtt_Enabled_State
      description: Get the enabled state of the MQTT module.
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mqttEnabledState'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
    post:
      tags:
        - Mqtt_Enabled_State
      description: >-
        Change the enabled state of the MQTT module. The state change is applied
        immediately.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mqttEnabledState'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/mqtt/common-settings:
    get:
      tags:
        - Mqtt_Common_Settings
      description: Get the common settings for the MQTT module.
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mqttCommonSettings'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/mqtt/connections:
    get:
      tags:
        - Mqtt_Connections
      description: Get all configured MQTT connections.
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mqttConnections'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
    post:
      tags:
        - Mqtt_Connections
      description: >-
        Create a new MQTT connection.The possible values are the same as those
        in GET /runtime/mqtt/connection.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mqttConnection'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/mqtt/connections/{conn_name}:
    get:
      tags:
        - Mqtt_Connections
      description: >-
        Get the connection with the specified name.The possible values are the
        same as those in GET runtime/mqtt/connection.
      parameters:
        - name: conn_name
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mqttConnectionGet'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    put:
      tags:
        - Mqtt_Connections
      description: Modifies the connection with the specified name.
      parameters:
        - name: conn_name
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      requestBody:
        description: >-
          Only the values that are to be modified have to be present. The
          possible values are the same as those in GET runtime/mqtt/connection.
          Setting a new connectionName means renaming the connection. All
          subsequent calls need to use the new name. Changing any of the values
          leads to restarting the connection, except for the connectionName.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mqttConnection'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    delete:
      tags:
        - Mqtt_Connections
      description: Deletes the connection with the specified name.
      parameters:
        - name: conn_name
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/mqtt/pub-requests:
    get:
      tags:
        - Mqtt_Publish_Requests
      description: Get the configured publish requests for MQTT module.
      parameters:
        - in: query
          name: brief
          schema:
            type: boolean
          description: Activates a lighter version of this get
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/mqttPublishRequests'
                  - $ref: '#/components/schemas/mqttPublishRequestsBrief'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    post:
      tags:
        - Mqtt_Publish_Requests
      description: Creates a new publish request with the specified settings.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mqttPublishRequestWithConnName'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/mqtt/pub-requests/{request-name}:
    get:
      tags:
        - Mqtt_Publish_Requests
      description: Retrieves the the details of the named publish request.
      parameters:
        - name: request-name
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mqttPublishRequestWithConnName'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    delete:
      tags:
        - Publish_Requests
      description: Deletes the publish request with the specified name <request-name>.
      parameters:
        - name: request-name
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    put:
      tags:
        - Publish_Requests
      description: >-
        Modifies the (existing) publish request specified in the URL as
        <request-name>.Only the fields whose values change have to be
        present.The possible values are the same as those in GET
        runtime/mqtt/connections/pub-request.Setting a new requestName means
        renaming the request. All subsequent calls need to use the new
        name.Performing the call on an url with conn-name different from the
        connection name the original publish request belongs to means
        reassigning the publish request the the specified conn-name connection.
      parameters:
        - name: request-name
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mqttPublishRequestWithConnName'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/mqtt/sub-requests:
    get:
      tags:
        - Mqtt_Subscribe_Requests
      description: Get the configured subscribe requests for MQTT module.
      parameters:
        - in: query
          name: brief
          schema:
            type: boolean
            enum:
              - true
              - false
          description: Activates a lighter version of this get
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/mqttSubscribeRequests'
                  - $ref: '#/components/schemas/mqttSubscribeRequestsBrief'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    post:
      tags:
        - Mqtt_Subscribe_Requests
      description: >-
        Creates a new subscribe request with the specified settings.All the
        fields have to be present. The possible values are the same as those in
        GET runtime/mqtt/connections/sub-request.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mqttSubscribeRequestToCreate'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/mqtt/sub-requests/{request-name}:
    put:
      tags:
        - Mqtt_Subscribe_Requests
      description: >-
        Modifies the (existing) subscribe request specified in the URL as
        <request-name>. Only the fields whose values change have to be present
        (applicable only for the first level members; i.e. if the
        "payloadDefinition" is present, it must be provided with ALL the
        fields). The possible values are the same as those in GET
        runtime/mqtt/connections/sub-request. Setting a new requestName means
        renaming the request. All subsequent calls need to use the new name.
        Performing the call on an url with conn-name different from the
        connection name the original subscribe request belongs to means
        reassigning the subscribe request the the specified conn-name
        connection.
      parameters:
        - name: request-name
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mqttSubscribeRequestBodyModel'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    get:
      tags:
        - Mqtt_Subscribe_Requests
      description: Retrieves the the details of the named subscribe request.
      parameters:
        - name: request-name
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mqttSubscribeGet'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    delete:
      tags:
        - Mqtt_Subscribe_Requests
      description: Deletes the publish request with the specified name <request-name>.
      parameters:
        - name: request-name
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/mqtt/connection-test:
    post:
      tags:
        - Mqtt_Testing_Connections
      description: >-
        Initiate the test on the connection availability for the connection
        define in the request. The json parameters and the rules applied are the
        same as described at Connections sub-chapter.The actual test will be
        performed asynchronously and the result shall be requested by polling
        GET requests on the url runtime/mqtt/connection-test/{conn-name}.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mqttTestConnectionPost'
      responses:
        '202':
          description: Connection Test command was successfully received for processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '401':
          description: Unauthorized to access Uri.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: A test command job is already in progress.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Indicates another error (unspecific internal server error).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '503':
          description: >-
            Indicates that the service cannot be called (in the current running
            mode).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/mqtt/connection-test/{conn-name}:
    get:
      tags:
        - Mqtt_Testing_Connections
      description: >-
        Retrieve the connection availability for a specific connection
        identified by <connection name>.
      parameters:
        - name: conn-name
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Get was successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mqttTestConnectionGet'
        '401':
          description: Unauthorized to access Uri.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: A test command job is already in progress.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Indicates another error (unspecific internal server error).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '503':
          description: >-
            Signals that a POST command shall be called to Initiate the test on
            the connection before.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    delete:
      tags:
        - Mqtt_Testing_Connections
      description: Cancels the in progress connection test identified by <conn-name>.
      parameters:
        - name: conn-name
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Delete was successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '401':
          description: Unauthorized to access Uri.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: There is no test in progress for the specified connection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Indicates another error (unspecific internal server error).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/mqtt/edit-certificates:
    post:
      tags:
        - Mqtt_Management_of_Temporary_PKI_while_editing
      description: >-
        Creates a temporary PKI for manipulating certificates.If an endpointName
        is given in the request, the temporary PKI is created for editing the
        PKI of the corresponding endpoint. The temporary PKI is created as a
        copy of the current PKI of that endpoint. Any other edit operation for
        that endpoint is aborted and the corresponding GUID is invalidated.If
        endpointName is null, an empty PKI is created, for a new endpoint that
        is expected to be created.The response contains a unique ID to be used
        in subsequent requests. All changes done on that temporary PKI are
        persisted ONLY when calling PUT or POST on
        runtime/mqtt/endpoints/<endpoint> and give the pkiSessionId in the json.
        The json parameters and the rules applied are the same as described at
        Connections sub-chapter.The actual test will be performed asynchronously
        and the result shall be requested by polling GET requests on the url
        runtime/mqtt/connection-test/{conn-name}.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                endpointName:
                  type: string
      responses:
        '200':
          description: Temporary PKI created
          content:
            application/json:
              schema:
                type: object
                properties:
                  pkiSessionId:
                    type: string
        '401':
          description: Unauthorized to access Uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: The given (non-null) endpointName is not an existing endpoint
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '405':
          description: Method is not allowed (only POST is allowed for this Uri)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Indicates another error (unspecific internal server error).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/mqtt/edit-certificates/{session-GUID}:
    delete:
      tags:
        - Mqtt_Management_of_Temporary_PKI_while_editing
      description: >-
        Removes the temporary PKI without changing the corresponding
        endpoint.The session GUID is invalidated.
      parameters:
        - name: session-GUID
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '401':
          description: Unauthorized to access Uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: The given (non-null) endpointName is not an existing endpoint
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '405':
          description: Method is not allowed (only POST is allowed for this Uri)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Indicates another error (unspecific internal server error).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/mqtt/edit-certificates/{session-GUID}/trusted:
    get:
      tags:
        - Mqtt_Management_of_Temporary_PKI_while_editing
      description: Get the list of trusted application certificates summaries.
      parameters:
        - name: session-GUID
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    validTo:
                      type: string
                    thumbprint:
                      type: string
        '401':
          description: Unauthorized to access Uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: The given (non-null) endpointName is not an existing endpoint
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '405':
          description: Method is not allowed (only POST is allowed for this Uri)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Indicates another error (unspecific internal server error).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    put:
      tags:
        - Mqtt_Management_of_Temporary_PKI_while_editing
      description: >-
        Import a trusted application certificate (.crt/.perm). The file in PEM
        format containing the public digital certificates trusted by the client.
      parameters:
        - name: session-GUID
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-x509-ca-cert:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '401':
          description: Unauthorized to access Uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: The given (non-null) endpointName is not an existing endpoint
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '405':
          description: Method is not allowed (only POST is allowed for this Uri)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Indicates another error (unspecific internal server error).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/mqtt/edit-certificates/{session-GUID}/trusted/{tumbprint}:
    get:
      tags:
        - Mqtt_Management_of_Temporary_PKI_while_editing
      description: Get the given trusted certificate details.
      parameters:
        - name: session-GUID
          in: path
          required: true
          schema:
            type: string
        - name: tumbprint
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  validTo:
                    type: string
                  storePath:
                    type: string
                  applicationURL:
                    type: string
                  organization:
                    type: string
                  domain:
                    type: string
                  subjectName:
                    type: string
                  issuerName:
                    type: string
                  validFrom:
                    type: string
                  serialNumber:
                    type: string
                  thumbprint:
                    type: string
                  subjectDN:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                  issuerDN:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                  subjectAlternativeName:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                  keyUsages:
                    type: array
                    items:
                      type: string
        '401':
          description: Unauthorized to access Uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: The given (non-null) endpointName is not an existing endpoint
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '405':
          description: Method is not allowed (only POST is allowed for this Uri)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Indicates another error (unspecific internal server error).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    delete:
      tags:
        - Mqtt_Management_of_Temporary_PKI_while_editing
      description: Deletes the certificate.
      parameters:
        - name: session-GUID
          in: path
          required: true
          schema:
            type: string
        - name: tumbprint
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '401':
          description: Unauthorized to access Uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: The given (non-null) endpointName is not an existing endpoint
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '405':
          description: Method is not allowed (only POST is allowed for this Uri)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Indicates another error (unspecific internal server error).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/mqtt/edit-certificates/{session-GUID}/rejected:
    get:
      tags:
        - Mqtt_Management_of_Temporary_PKI_while_editing
      description: >-
        Get the rejected application certificates summaries. The response json
        is identical with that in GET
        /runtime/mqtt/edit-certificates/<session-GUID>/trusted
      parameters:
        - name: session-GUID
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '401':
          description: Unauthorized to access Uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: The given (non-null) endpointName is not an existing endpoint
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '405':
          description: Method is not allowed (only POST is allowed for this Uri)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Indicates another error (unspecific internal server error).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/mqtt/edit-certificates/{session-GUID}/rejected/{tumbprint}:
    get:
      tags:
        - Mqtt_Management_of_Temporary_PKI_while_editing
      description: >-
        Get the given rejected certificate details. Result json format is
        identical with that in
        /runtime/mqtt/edit-certificates/<session-GUID>/trusted/<tumbprint>
      parameters:
        - name: session-GUID
          in: path
          required: true
          schema:
            type: string
        - name: tumbprint
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '401':
          description: Unauthorized to access Uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: The given (non-null) endpointName is not an existing endpoint
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '405':
          description: Method is not allowed (only POST is allowed for this Uri)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Indicates another error (unspecific internal server error).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    delete:
      tags:
        - Mqtt_Management_of_Temporary_PKI_while_editing
      description: Deletes the certificate.
      parameters:
        - name: session-GUID
          in: path
          required: true
          schema:
            type: string
        - name: tumbprint
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '401':
          description: Unauthorized to access Uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: The given (non-null) endpointName is not an existing endpoint
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '405':
          description: Method is not allowed (only POST is allowed for this Uri)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Indicates another error (unspecific internal server error).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/mqtt/edit-certificates/{session-GUID}/rejected/{thumbprint}/move-to-trusted:
    post:
      tags:
        - Mqtt_Management_of_Temporary_PKI_while_editing
      description: >-
        Moves a certificate identified by the <thumbprint> from the rejected
        folder to the trusted folder.
      parameters:
        - name: session-GUID
          in: path
          required: true
          schema:
            type: string
        - name: thumbprint
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '401':
          description: Unauthorized to access Uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: The given (non-null) endpointName is not an existing endpoint
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '405':
          description: Method is not allowed (only POST is allowed for this Uri)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Indicates another error (unspecific internal server error).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/mqtt/download-broker-certificate:
    post:
      tags:
        - Mqtt_Management_of_Temporary_PKI_while_editing
      description: >-
        Download the broker certificate in the Trusted folder. If the Trusted
        directory already contains a certificate then it will be deleted. JSON
        keys pkiSessionId and  pkiStore are exclusive. If both will be sent then
        the backend will use pkiSessionId.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pkiSessionId:
                  type: string
                pkiStore:
                  type: string
                connectionName:
                  type: string
                protocol:
                  type: string
                hostname:
                  type: string
                suffix:
                  type: string
                port:
                  type: integer
                enabled:
                  type: boolean
                clientId:
                  type: string
                authenticationType:
                  type: string
                userId:
                  type: string
                proxySettings:
                  type: object
                  properties:
                    proxyType:
                      type: string
                    URL:
                      type: string
                    port:
                      type: integer
                    useAuthentication:
                      type: boolean
                    username:
                      type: string
                    password:
                      type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '401':
          description: Unauthorized to access Uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: The given (non-null) endpointName is not an existing endpoint
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '405':
          description: Method is not allowed (only POST is allowed for this Uri)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Indicates another error (unspecific internal server error).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/mqtt/special-placeholders:
    get:
      tags:
        - Mqtt_Special_Placeholders
      description: Get the special placeholders.
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mqttSpecialPlaceholders'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/opcua-server/edit-certificates:
    post:
      tags:
        - Opcuaserver_Temporary_PKI_Management
      description: >-
        Creates a temporary PKI for manipulating certificates. If an
        endpointName is given in the request, the temporary PKI is created for
        editing the PKI of the corresponding endpoint. The temporary PKI is
        created as a copy of the current PKI of that endpoint. Any other edit
        operation for that endpoint is aborted and the corresponding GUID is
        invalidated. If endpointName is null, an empty PKI is created, for a new
        endpoint that is expected to be created. The response contains a unique
        ID to be used in subsequent requests. All changes done on that temporary
        PKI are persisted ONLY when calling PUT or POST on
        runtime/opcua-server/endpoints/<endpoint> and give the pkiSessionId in
        the json.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - endpointName
              properties:
                endpointName:
                  type: string
        required: true
      responses:
        '200':
          description: Temporary PKI created
          content:
            application/json:
              schema:
                type: object
                required:
                  - pkiSessionId
                properties:
                  pkiSessionId:
                    type: string
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '401':
          description: Unauthorized to access Uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: The given (non-null) endpointName is not an existing endpoint
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '405':
          description: Method is not allowed (only POST is allowed for this Uri)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Indicates another error (unspecific internal error)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/opcua-server/edit-certificates/{session-GUID}:
    delete:
      tags:
        - Opcuaserver_Temporary_PKI_Management
      description: >-
        Removes the temporary PKI without changing the corresponding
        endpoint.The session GUID is invalidated.
      parameters:
        - name: session-GUID
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/opcua-server/default-settings/{session-GUID}/own-certificate:
    get:
      tags:
        - Opcuaserver_Temporary_PKI_Management
      description: Get the default parameters for the Client App certificate.
      parameters:
        - name: session-GUID
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                type: object
                required:
                  - country
                  - state-or-province
                  - organization
                  - organization-unit
                  - common-name
                  - email
                  - locality
                  - valid-days
                properties:
                  country:
                    type: string
                  state-or-province:
                    type: string
                  organization:
                    type: string
                  organization-unit:
                    type: string
                  common-name:
                    type: string
                  email:
                    type: string
                  locality:
                    type: string
                  valid-days:
                    type: integer
        '404':
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/opcua-server/edit-certificates/{session-GUID}/own:
    get:
      tags:
        - Opcuaserver_Temporary_PKI_Management
      description: Get the server own application certificate summary.
      parameters:
        - name: session-GUID
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                type: object
                required:
                  - name
                  - validTo
                  - thumbprint
                properties:
                  name:
                    type: string
                  validTo:
                    type: string
                  thumbprint:
                    type: string
        '404':
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    put:
      tags:
        - Opcuaserver_Temporary_PKI_Management
      description: >-
        Import the server own application certificate (.pfx - mime-type
        application/x-pkcs12). The certificate is provided as one .pfx file,
        which embeds a certificate and its corresponding private key. The
        private key in the uploaded pfx file is expected to be
        password-protected with the current password. If you need to upload a
        pfx file protected with a different password, then you should first
        change the password (POST on
        /runtime/opcua-server/edit-certificates/<session-GUID>/own/password) and
        then upload the pfx. The initial password for a newly-created PKI is
        ‘pass`. On success, the old certificate (.der and .pem) are deleted and
        the password is persisted.
      parameters:
        - name: session-GUID
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*:
            schema:
              type: string
              format: binary
        required: true
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/opcua-server/edit-certificates/{session-GUID}/own/details/{thumbprint}:
    get:
      tags:
        - Opcuaserver_Temporary_PKI_Management
      description: >-
        Get own certificate details. Notes - Each "name" part in "subjectDN" and
        "issuerDN" may be "C" = country, "S" = state/county, "L" = locality
        (city), "O" = organization, "OU" = organization unit (department), etc.
        Each "name" part in "subjectAlternateName" may be "URL", "DNS", etc.
        Some information is duplicate, because of historical reasons (e.g,
        "name" is the same as "CN" under "subjectDN")
      parameters:
        - name: session-GUID
          in: path
          required: true
          schema:
            type: string
        - name: thumbprint
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/opcuaserverCertificateDetails'
        '404':
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/opcua-server/edit-certificates/{session-GUID}/own/cert:
    get:
      tags:
        - Opcuaserver_Temporary_PKI_Management
      description: >-
        Get the server own application certificate (the actual content, in DER
        format application/x-x509-ca-cert). If no own certificate is defined
        yet, then a HTTP result code of 404 is returned.
      parameters:
        - name: session-GUID
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/*:
              schema:
                type: string
                format: binary
        '404':
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/opcua-server/edit-certificates/{session-GUID}/own/password:
    post:
      tags:
        - Opcuaserver_Temporary_PKI_Management
      description: >-
        Set the own certificate password. Note that once set, the password is
        used for unpacking the .pfx file uploaded with the PUT command on
        runtime/uacore/certificates/application/own.
      parameters:
        - name: session-GUID
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
        required: true
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/opcua-server/edit-certificates/{session-GUID}/own/generate-parametrized:
    post:
      tags:
        - Opcuaserver_Temporary_PKI_Management
      description: >-
        Set a new servers own certificate. The old own certificate is deleted on
        success.
      parameters:
        - name: session-GUID
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                country:
                  type: string
                  description: >-
                    Country must be either empty or a 2-characters ISO country
                    code
                state-or-province:
                  type: string
                  description: >-
                    State-or-provence and locality must be UTF-8 strings of at
                    most 128 characters (code points are numbered)
                organization:
                  type: string
                  description: >-
                    Organization, organization-unit, and common-name are UTF-8
                    strings of at most 64 characters
                organization-unit:
                  type: string
                common-name:
                  type: string
                email:
                  type: string
                  description: >-
                    Email must be a valid e-mail of at most 128 characters (no
                    non-ASCII characters are allowed)
                locality:
                  type: string
                valid-days:
                  type: integer
                  description: >-
                    Valid-days must be between 0 and 24855 (2^31-1 seconds, or
                    approximately 86 years)
        required: true
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/opcua-server/edit-certificates/{session-GUID}/own/reusable-certs:
    get:
      tags:
        - Opcuaserver_Temporary_PKI_Management
      description: >-
        Retrieve a list with the available certificates from the other
        endpoints.
      parameters:
        - name: session-GUID
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - endpointName
                    - name
                    - validTo
                    - thumbprint
                  properties:
                    endpointName:
                      type: string
                    name:
                      type: string
                    validTo:
                      type: string
                    thumbprint:
                      type: string
        '404':
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/opcua-server/edit-certificates/{session-GUID}/own/copy-from-endpoint:
    post:
      tags:
        - Opcuaserver_Temporary_PKI_Management
      description: >-
        Copies the own certificate from an existing endpoint as the own
        certificate.
      parameters:
        - name: session-GUID
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - sourceEndpointName
              properties:
                sourceEndpointName:
                  type: string
        required: true
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/opcua-server/edit-certificates/{session-GUID}/trusted:
    get:
      tags:
        - Opcuaserver_Temporary_PKI_Management
      description: Get the list of trusted application certificates summaries.
      parameters:
        - name: session-GUID
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - name
                    - validTo
                    - thumbprint
                  properties:
                    name:
                      type: string
                    validTo:
                      type: string
                    thumbprint:
                      type: string
        '404':
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    put:
      tags:
        - Opcuaserver_Temporary_PKI_Management
      description: >-
        Import a trusted app certificate (.der - mime-type
        application/x-x509-ca-cert).
      parameters:
        - name: session-GUID
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*:
            schema:
              type: string
              format: binary
        required: true
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/opcua-server/edit-certificates/{session-GUID}/trusted/{thumbprint}:
    get:
      tags:
        - Opcuaserver_Temporary_PKI_Management
      description: >-
        Get the given trusted certificate details. Result json format is
        identical with that in
        /runtime/opcua-server/edit-certificates/<session-GUID>/own/details
      parameters:
        - name: session-GUID
          in: path
          required: true
          schema:
            type: string
        - name: thumbprint
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/opcuaserverCertificateDetails'
        '404':
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    delete:
      tags:
        - Opcuaserver_Temporary_PKI_Management
      description: Delete the certificate.
      parameters:
        - name: session-GUID
          in: path
          required: true
          schema:
            type: string
        - name: thumbprint
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/opcua-server/edit-certificates/{session-GUID}/rejected:
    get:
      tags:
        - Opcuaserver_Temporary_PKI_Management
      description: >-
        Get the rejected application certificates summaries. The response json
        is identical with that in GET
        /runtime/opcua-server/edit-certificates/<session-GUID>/trusted
      parameters:
        - name: session-GUID
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    name:
                      type: string
                    validTo:
                      type: string
                    thumbprint:
                      type: string
        '404':
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/opcua-server/edit-certificates/{session-GUID}/rejected/{thumbprint}:
    get:
      tags:
        - Opcuaserver_Temporary_PKI_Management
      description: >-
        Get the given trusted certificate details. Result json format is
        identical with that in
        /runtime/opcua-server/edit-certificates/<session-GUID>/own/details
      parameters:
        - name: session-GUID
          in: path
          required: true
          schema:
            type: string
        - name: thumbprint
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/opcuaserverCertificateDetails'
        '404':
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    delete:
      tags:
        - Opcuaserver_Temporary_PKI_Management
      description: Delete the certificate.
      parameters:
        - name: session-GUID
          in: path
          required: true
          schema:
            type: string
        - name: thumbprint
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/opcua-server/edit-certificates/{session-GUID}/rejected/{thumbprint}/move-to-trusted:
    post:
      tags:
        - Opcuaserver_Temporary_PKI_Management
      description: >-
        Moves a certificate identified by the <thumbprint> from the rejected
        folder to the trusted folder.
      parameters:
        - name: session-GUID
          in: path
          required: true
          schema:
            type: string
        - name: thumbprint
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/opcua-server/enabled:
    get:
      tags:
        - Opcuaserver_Enabled_State
      description: Get the enabled state of the server.
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/opcuaserverEnabledState'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
    post:
      tags:
        - Opcuaserver_Enabled_State
      description: >-
        Change the enabled state of the server.The state change is applied
        immediately.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/opcuaserverEnabledState'
        required: true
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/opcua-server/endpoints/{endpoint}/ip-filtering:
    get:
      tags:
        - Opcuaserver_Ip_Filtering_Management
      description: >-
        Gets the specific settings for the Ip Filtering feature for the
        specified endpoint, including the list of the configured Ip ranges (if
        configured) subject to filtering.
      parameters:
        - name: endpoint
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/opcuaserverIpFilteringManag'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    post:
      tags:
        - Opcuaserver_Ip_Filtering_Management
      description: >-
        Changes the settings for the Ip Filtering feature of the specified
        endpint.It allows to enable/disable the feature entirely (enabled),
        allow/forbid connection from the specified IP version
        (allowIpV4/allowIpV6), specify whether the filtering list is permissive
        or restrictive (isBlackList) and set a new content for the list of Ip
        Ranges part of the filter; each entry in the list has an address (IPV4
        or IPV6), an ip mask (specified as wildcard or number of bits) and a
        description.
      parameters:
        - name: endpoint
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/opcuaserverIpFilteringManag'
        required: true
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/opcua-server/default-settings/authentication-attempts:
    get:
      tags:
        - Opcuaserver_Unsuccessful_Auth_Attempts
      description: >-
        Gets the default actions to be performed when a large number of failed
        authentication attempts are performed on an endpoint.
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/opcuaserverUnsuccAuthAttempts'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
    post:
      tags:
        - Opcuaserver_Unsuccessful_Auth_Attempts
      description: >-
        Sets the default actions to be performed when a large number of failed
        authentication attempts are performed on an endpoint.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/opcuaserverUnsuccAuthAttempts'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/opcua-server/endpoints:
    get:
      tags:
        - Opcuaserver_Endpoints_Management
      description: >-
        Get a summary of the configured endpoints list. Access protection is
        conveyed with the brief endpoints as follows

        - certificateStatus is true if there are any certificates which are
        rejected during authentication as resulted from the access protection
        configuration settings

        - endpointStatus is true if there are client IP addresses which are
        rejected during authentication as resulted from the access protection
        configuration settings

        - endpointStatus is true is the endpoint is temporarily or permanently
        disabled as resulted from the access protection configuration settings
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/opcuaserverConfiguredEndpoints'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/opcua-server/endpoints/{endpoint}:
    get:
      tags:
        - Opcuaserver_Endpoints_Management
      description: Get the details of the specified endpoint.
      parameters:
        - name: endpoint
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/opcuaserverSpecificEndpoint'
        '404':
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    put:
      tags:
        - Opcuaserver_Endpoints_Management
      description: Add a new endpoint definition.
      parameters:
        - name: endpoint
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/opcuaserverSpecificEndpointWithPKI'
      responses:
        '201':
          description: Created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    post:
      tags:
        - Opcuaserver_Endpoints_Management
      description: >-
        Change an existing endpoint. Only the changed attribute has to be passed
        in the request content. If „pkiSessionId“ is specified, it must be the
        GUID of a temporary PKI associated to the current endpoint; the
        temporary PKI is copied back over the current endpoint PKI. Whether or
        not „pkiSessionId“ is specified, any temporary PKI associated to the
        current endpoint is discarded and its GUID is invalidated. Validity
        checks - If an attribute is included, the validation are the ones
        specified for adding a new endpoint. A restart of the endpoint – leading
        to closing all the associated sessions from clients – is triggered if
        any of the following parameters is changed (note that the actual value
        must change, not merely specifiying the parameter in the JSON) -
        endpoint-url, enabled (stops or starts the session), any parameter under
        security, any parameter under authentication, the own application
        certificate (through PKI editing). Changing access rights has immediate
        effect upon existing sessions – subsequent UA request will be allowed or
        denied according to the new rules, and existing subscriptions will stop
        or resume receiving notifications. Changing the maximum number of
        sessions or changing the trusted certificates will have effect only on
        future sessions – existing sessions will continue to work even if they
        would be denied with the new parameters.
      parameters:
        - name: endpoint
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/opcuaserverSpecificEndpointWithPKI'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    delete:
      tags:
        - Opcuaserver_Endpoints_Management
      description: Delete endpoint specified by <endpoint>.
      parameters:
        - name: endpoint
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/opcua-server/endpoints/{endpoint}/users:
    get:
      tags:
        - Opcuaserver_Users_Management
      description: Get the list of the configured users for specified endpoint.
      parameters:
        - name: endpoint
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/opcuaserverEndpointUsers'
        '404':
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/opcua-server/endpoints/{endpoint}/users/{userId}:
    get:
      tags:
        - Opcuaserver_Users_Management
      description: Get the details for the specified <endpoint>/<userId> pair.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: endpoint
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/opcuaserverEndpointUser'
        '404':
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    put:
      tags:
        - Opcuaserver_Users_Management
      description: >-
        Add a new user to the current endpoint.Validity checks - {userId} 
        specifies an user which must exist in the system (and assigned to „OPC
        UA Server Users“ group); „access“ is a string array with values from the
        following set „Browse“, „Read“, „Write“, „Subscribe“, „Methods“
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: endpoint
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/opcuaserverEndpointUser'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    post:
      tags:
        - Opcuaserver_Users_Management
      description: >-
        Change the parameters for the specified <endpoint>/<userId> pair. Only
        the changed attribute has to be passed in the request content.Validity
        checks - „access“ is a string array with values from the following set
        „Browse“,„Read“, „Write“, „Subscribe“, „Methods“
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: endpoint
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/opcuaserverEndpointUser'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    delete:
      tags:
        - Opcuaserver_Users_Management
      description: Delete the specified user from the current endpoint.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: endpoint
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/opcua-server/endpoints/{endpoint}/authentication-attempts:
    get:
      tags:
        - Opcuaserver_Authentication_Attempts_Management
      description: >-
        Gets the actions to be performed when a large number of failed
        authentication attempts are performed on the specified endpoint, plus
        the state of those actions.
      parameters:
        - name: endpoint
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/opcuaserverGetAuthAttempts'
        '404':
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    post:
      tags:
        - Opcuaserver_Authentication_Attempts_Management
      description: >-
        Changes the actions to be performed when a large number of failed
        authentication attempts are performed on the specified existing
        endpoint.Only the changed attribute has to be passed in the request
        content.
      parameters:
        - name: endpoint
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/opcuaserverPostAuthAttempts'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/opcua-server/endpoints/{endpoint}/authentication-attempts/reset:
    post:
      tags:
        - Opcuaserver_Authentication_Attempts_Management
      description: >-
        If the endpoint is temporarily or permanently disabled as a result of
        access protection restriction, this call shall reset the state of the
        access protection and the endpoints shall be re-enabled.
      parameters:
        - name: endpoint
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/opcua-server/endpoints/{endpoint}/authentication-attempts/reset-certificates:
    post:
      tags:
        - Opcuaserver_Authentication_Attempts_Management
      description: >-
        If one or more client certificates is temporarily or permanently
        disabled on the given endpoint as a result of access protection
        restriction, this call shall reset the state of the access protection
        for the certificates with specified thumbprints.
      parameters:
        - name: endpoint
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/opcuaserverAuthResetCert'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/opcua-server/endpoints/{endpoint}/authentication-attempts/reset-ips:
    post:
      tags:
        - Opcuaserver_Authentication_Attempts_Management
      description: >-
        If one or more client IPs are temporarily or permanently disabled on the
        given endpoint as a result of access protection restriction, this call
        shall reset the state of the access protection for the specified IPs.
      parameters:
        - name: endpoint
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/opcuaserverAuthResetCert'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/siemenss32/s32connection:
    get:
      tags:
        - Siemens_S7_32
      summary: Retrieve all configured Siemens Siemens S7-32 connections.
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/siemensS732Conns'
        '403':
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
    put:
      tags:
        - Siemens_S7_32
      summary: Creates a new Siemens Siemens S7-32 connection
      description: >-
        Creates a new Siemens Siemens S7-32 connection and persists the
        information in the configuration file. If enabled it applies it
        immediately after a succeess confirmation. Each newly created connection
        to a data source has to be added into an existing address space.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/siemensS732Conn'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '403':
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/siemenss32/s32connection/{conn_name}:
    get:
      tags:
        - Siemens_S7_32
      summary: >-
        Retrieve configured Siemens Siemens S7-32 connection identified by
        <conn_name>.
      parameters:
        - name: conn_name
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/siemensS732ConnWithoutConnStatus'
        '403':
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    post:
      tags:
        - Siemens_S7_32
      summary: Updates an existing Siemens Siemens S7-32 connection
      description: >-
        Updates an existing Siemens Siemens S7-32 connection with the new
        information. If changes are detected and if enabled it applies it
        immediately after a succeess confirmation.
      parameters:
        - name: conn_name
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/siemensS732Conn'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '403':
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    delete:
      tags:
        - Siemens_S7_32
      summary: Deletes the Siemens S7-32 connection identified by name <conn_name> .
      parameters:
        - name: conn_name
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '403':
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/siemenss32/s32connection/{conn_name}/symbolfile:
    put:
      tags:
        - Siemens_S7_32
      summary: >-
        Upload an SDFI symbol file for the connection identified by name
        <conn_name>.
      parameters:
        - name: conn_name
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/siemenss32/s32connection/advanced/defaults:
    get:
      tags:
        - Siemens_S7_32
      summary: Retrieves default advanced settings values.
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/siemensS732ConnWithoutConnStatus'
        '403':
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/siemenss72/s72connection:
    get:
      tags:
        - Siemens_S7_72
      summary: Retrieve all configured Siemens S7-72 connections.
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/siemensS772Conns'
        '403':
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
    put:
      tags:
        - Siemens_S7_72
      summary: Creates a new Siemens S7-72 connection
      description: >-
        Creates a new Siemens S7-72 connection and applies it immediately after
        a success confirmation. Each newly created connection to a data source
        has to be added into an existing address space.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/siemensS772Conn'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '403':
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/siemenss72/s72connection/{conn_name}:
    get:
      tags:
        - Siemens_S7_72
      summary: Retrieve the Siemens S7-72 connection identified by name <conn_name> .
      parameters:
        - name: conn_name
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/siemensS772ConnWithoutConnStatus'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    post:
      tags:
        - Siemens_S7_72
      summary: >-
        Updates an existing Siemens S7-72 connection with the new information
        and applies it immediately after a success confirmation.
      parameters:
        - name: conn_name
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/siemensS772Conn'
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '403':
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    delete:
      tags:
        - Siemens_S7_72
      summary: Deletes the Siemens S7-72 connection identified by name <conn_name> .
      parameters:
        - name: conn_name
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/siemenss72/s72connection/advanced/defaults:
    get:
      tags:
        - Siemens_S7_72
      summary: Retrieves default advanced settings values.
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/siemensS772ConnWithoutConnStatus'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/uacore/identity:
    get:
      tags:
        - Uacore_Application_Identity
      description: Get the server identity.
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                type: object
                required:
                  - name
                  - uri
                  - product-uri
                properties:
                  name:
                    type: string
                  uri:
                    type: string
                  product-uri:
                    type: string
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/uacore/subscriptions-merging:
    get:
      tags:
        - Uacore_Subscriptions_And_Monitored_Items_Options
      description: Gets the core Subscriptions and Monitored Items options.
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                type: object
                required:
                  - merging
                properties:
                  merging:
                    type: boolean
                    description: >-
                      The merging parameter can have the following values false
                      - subscriptions and monitored items are never merged and
                      the relation of subscriptions to monitored items is
                      preserved; true - monitored items are merged if node ID,
                      attribute, sampling interval, queue size, discard oldest,
                      and the publishing interval of the subscription are the
                      same.
                    enum:
                      - true
                      - false
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/uacore/subscriptions:
    post:
      tags:
        - Uacore_Subscriptions_And_Monitored_Items_Options
      description: >-
        Sets the core Subscriptions and Monitored Items options. If called while
        in running mode, changing the merging parameter will trigger a restart
        (going to halted and back to running mode).
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - merging
              properties:
                merging:
                  type: boolean
                  description: >-
                    The merging parameter can have the following values false -
                    subscriptions and monitored items are never merged and the
                    relation of subscriptions to monitored items is preserved;
                    true - monitored items are merged if node ID, attribute,
                    sampling interval, queue size, discard oldest, and the
                    publishing interval of the subscription are the same.
                  enum:
                    - true
                    - false
        required: true
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/uacore/nodesetxml:
    get:
      tags:
        - Uacore_NodeSetXml
      description: >-
        Get xml files stored in <configuration base>\uacore\nodeset as a json
        list
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                type: array
                required:
                  - fileName
                items:
                  properties:
                    fileName:
                      type: string
                      example: OPC.MDIS.NodeSet2.xml
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/uacore/nodesetxml/{fileName.xml}:
    post:
      tags:
        - Uacore_NodeSetXml
      description: >-
        Creates the specified xml under folder <configuration
        base>\uacore\nodeset.
      parameters:
        - name: fileName.xml
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/xml:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: OK success.
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    delete:
      tags:
        - Uacore_NodeSetXml
      description: >-
        Deletes the specified xml from folder <configuration
        base>\uacore\nodeset. In order for these commands to work, creation of
        <configuration base>\core\nodeset folder is mandatory. Xml files will be
        imported only on start time or on restart; during upload the content
        just xml basic validation is applied. In case of duplicate nodes found
        on import, the operation fails but the node id is specifed in error
        logs. Max file size is 10MB (with corresponding nginx config ->
        “client_max_body_size 10M; “ in http section.
      parameters:
        - name: fileName.xml
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/uacore/namespaces/index-array:
    get:
      tags:
        - Uacore_Namespaces_Management
      description: >-
        Retrieves the current state of the Namespace Index Array of the internal
        Opc Ua Server. It works only in running mode, and it is used only for
        ease the access to the mappping between the registered Namespace URIs
        and their corresponding indexes.
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - namespaceUri
                    - namespaceIndex
                  properties:
                    namespaceUri:
                      type: string
                    namespaceIndex:
                      type: integer
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/uacore/namespaces/reset:
    post:
      tags:
        - Uacore_Namespaces_Management
      description: >-
        Recreates the namespaces indexes/URIs mapping at the next transition
        into the running state of the system, keeping only the actual used ones.
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '503':
          description: Service Unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/uacore/namespaces/register:
    post:
      tags:
        - Uacore_Namespaces_Management
      description: >-
        Registers a UA namespace (no effect if the URI is already registered).
        Returns the allocated namespace index.It works only in running mode, and
        it is used only for making easier to test dataFEED SIS.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - namespaceUri
              properties:
                namespaceUri:
                  type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  namespaceIndex:
                    type: integer
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '503':
          description: Service Unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/uacore/addressspace-export/{sessionTypeName}:
    get:
      tags:
        - Address_Space_Export
      description: >-
        Get the previously generated NodeSet2 XML file for the addresspace
        paired with sessionTypeName. It shall fail with 404 i
      parameters:
        - name: sessionTypeName
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/xml:
              schema:
                type: string
                format: binary
        '404':
          description: >-
            File was not found. It might have been deleted or its generation
            failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '503':
          description: >-
            A nodeset export is in progress, once finalized retrieving the
            existing nodeset files shall work.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    delete:
      tags:
        - Address_Space_Export
      description: >-
        Removes a previously generated NodeSet2 XML file for the addresspace
        paired with sessionTypeName if the file exists.
      parameters:
        - name: sessionTypeName
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/xml:
              schema:
                type: string
                format: binary
        '404':
          description: File not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/uacore/addressspace-export:
    post:
      tags:
        - Address_Space_Export
      description: >-
        Triggers the generation of a NodeSet2 XML file describing the address
        space paired to the sessionTypeName. A separate is generated for each
        address space and once generated it has to be specifically removed
        otherwise it is preserved.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - sessionTypeName
              properties:
                sessionTypeName:
                  type: string
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '503':
          description: Service Unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/uacore/sights/conn-filtering/definition:
    get:
      tags:
        - Uacore_Sights_Management
      description: >-
        Get the list of configured sights, together with the allowed connection
        names for each.
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - sightName
                    - active
                    - connections
                  properties:
                    sightName:
                      type: string
                    active:
                      type: boolean
                    connections:
                      type: array
                      items:
                        type: string
        '404':
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
    post:
      tags:
        - Uacore_Sights_Management
      description: >-
        Adds a sight definition, by specifying the name and the list of allowed
        connection names.
      requestBody:
        description: If not specified in JSON, the default active state is true.
        content:
          application/json:
            schema:
              type: object
              required:
                - sightName
                - type
                - active
                - connections
              properties:
                sightName:
                  type: string
                type:
                  type: string
                  enum:
                    - type-static
                    - type-external
                active:
                  type: boolean
                connections:
                  type: array
                  items:
                    type: string
        required: true
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/uacore/sights/conn-filtering/type-external:
    get:
      tags:
        - Uacore_Sights_Management
      description: >-
        Get the list of configured sights for which the type is type-external,
        together with the allowed connection names for each.
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - sightName
                    - active
                    - connections
                  properties:
                    sightName:
                      type: string
                    active:
                      type: boolean
                    connections:
                      type: array
                      items:
                        type: string
        '404':
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/uacore/sights/conn-filtering/type-static:
    get:
      tags:
        - Uacore_Sights_Management
      description: >-
        Get the list of configured sights for which the type is type-static,
        together with the allowed.
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - sightName
                    - active
                    - connections
                  properties:
                    sightName:
                      type: string
                    active:
                      type: boolean
                    connections:
                      type: array
                      items:
                        type: string
        '404':
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/uacore/sights/conn-filtering/definition/{sightName}:
    get:
      tags:
        - Uacore_Sights_Management
      description: Get the definition of the specified <sightName> sight.
      parameters:
        - name: sightName
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                type: object
                required:
                  - sightName
                  - active
                  - connections
                properties:
                  sightName:
                    type: string
                  active:
                    type: boolean
                  connections:
                    type: array
                    items:
                      type: string
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    put:
      tags:
        - Uacore_Sights_Management
      description: >-
        Change the specified sight definition by redefineing the list of allowed
        connection names.
      parameters:
        - name: sightName
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - active
                - connections
              properties:
                active:
                  type: boolean
                connections:
                  type: array
                  items:
                    type: string
        required: true
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
    delete:
      tags:
        - Uacore_Sights_Management
      description: Deletes the specified sight definition.
      parameters:
        - name: sightName
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/uacore/sights/conn-filtering/sessions-mapping:
    get:
      tags:
        - Uacore_Sights_Management
      description: Retrieves the list of configured sessions-to-sights map.
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - sessionTypeName
                    - sightName
                  properties:
                    sessionTypeName:
                      type: string
                    sightName:
                      type: string
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
    post:
      tags:
        - Uacore_Sights_Management
      description: >-
        Adds/modify one entry in the list of sessions-to-sights map. If there is
        already a mapping for the specified session, it will be overwritten; if
        there is not, it will be created.The specified sight must exist as a
        defined connection filtering sight.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - sessionTypeName
                - sightName
              properties:
                sessionTypeName:
                  type: string
                sightName:
                  type: string
        required: true
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/uacore/sights/conn-filtering/sessions-mapping/{sessionTypeName}:
    delete:
      tags:
        - Uacore_Sights_Management
      description: Delete the existing mapping for the specified session type.
      parameters:
        - name: sessionTypeName
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/uacore/sights/nodes-filter/get-state:
    post:
      tags:
        - Uacore_Sights_Node_Filter_Definition
      description: >-
        Get the information about the enable state of a filter for the specified
        sightName and sessionTypeName. A filter is automatically in active state
        if it exists physically in the configuration repository (as a result of
        a previous save). This command is available both in running and halted
        system states.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - sightName
                - sessionTypeName
              properties:
                sightName:
                  type: string
                sessionTypeName:
                  type: string
        required: true
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                type: object
                required:
                  - active
                properties:
                  active:
                    type: boolean
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/uacore/sights/nodes-filter/definition:
    post:
      tags:
        - Uacore_Sights_Node_Filter_Definition
      description: >-
        Open a new “session” for nodes filter manipulation, for the specified
        sight name and session type.The return session id can be used for
        further calls which will act as definition (creation or modification) of
        the nodes filter.Calling this method invalidates and discards any
        progress on an already existing session for the specified sight name and
        session type.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - sightName
                - sessionTypeName
                - browseSessionTypeName
              properties:
                sightName:
                  type: string
                sessionTypeName:
                  type: string
                browseSessionTypeName:
                  type: string
        required: true
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                type: object
                required:
                  - sessionId
                properties:
                  sessionId:
                    type: string
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
      parameters:
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
  /connectors/{edgeConnector_ID}/runtime/uacore/sights/nodes-filter/definition/{session-GUID}:
    delete:
      tags:
        - Uacore_Sights_Node_Filter_Definition
      description: >-
        Remove the existent filter for the specified nodes filter definition
        session and invalidates the session (no further editing is allowed for
        the <session-GUID>).
      parameters:
        - name: session-GUID
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/uacore/sights/nodes-filter/{session-GUID}/save:
    post:
      tags:
        - Uacore_Sights_Node_Filter_Definition
      description: >-
        Save the current state of the filter definition for the specified nodes
        filter definition session and invalidates the session (no further
        editing is allowed for the <session-GUID>).
      parameters:
        - name: session-GUID
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/uacore/sights/nodes-filter/{session-GUID}/cancel:
    post:
      tags:
        - Uacore_Sights_Node_Filter_Definition
      description: >-
        Discard the current in-progress filter definition for the specified
        filter definition session and invalidates the session (no further
        editing is allowed for the <session-GUID>).
      parameters:
        - name: session-GUID
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/uacore/sights/nodes-filter/{session-GUID}/nodes-edit:
    post:
      tags:
        - Uacore_Sights_Node_Filter_Definition
      description: >-
        Updated a node’s current service based filter mask definition (see
        details on the checked parameter below). The node will be recursively
        browsed on the corresponding source and the add/remove action will be
        applied to the node itself together with all the nodes in the
        sub-hierarchy discovered by hierarchical references.Depending on the
        value of “applyToSubtree” parameter, the action will be appied to the
        node only, or to the entire subtree.
      parameters:
        - name: session-GUID
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - nodeId
                - checked
                - applyToSubtree
              properties:
                nodeId:
                  type: string
                checked:
                  type: string
                  description: >-
                    When the checked bit mask corresponding for a service is set
                    on a node the service call execution is allowed on that
                    node.*Special bit flag without any functional meaning, shall
                    be reserved for UI logic as it allows to store an additional
                    state used, for display purposes, to inform the user if any
                    filters are set in a node's subtree.
                  format: binary
                  example: '0x01'
                  enum:
                    - Browse: '0x01'
                    - Read: '0x02'
                    - Write: '0x04'
                    - Method call: '0x08'
                    - Subscribe: '0x10'
                    - UI reserved*: '0x1000'
                applyToSubtree:
                  type: boolean
        required: true
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
  /connectors/{edgeConnector_ID}/runtime/uacore/sights/nodes-filter/{session-GUID}/nodes-status:
    post:
      tags:
        - Uacore_Sights_Node_Filter_Definition
      description: Get the “belongs-to-filter” status for the specified nodes.
      parameters:
        - name: session-GUID
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: edgeConnector_ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - nodeId
              properties:
                nodeId:
                  type: array
                  items:
                    type: string
        required: true
      responses:
        '200':
          description: OK success.
          content:
            application/json:
              schema:
                type: object
                required:
                  - checked
                properties:
                  checked:
                    type: array
                    items:
                      type: number
        '400':
          description: The nodeId/ session-GUID is malformed, or node not accessible.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '401':
          description: Unauthorized to access Uri.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '404':
          description: The session-GUID is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '405':
          description: Method is not allowed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '406':
          description: Not Acceptable. Default user password was not changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '500':
          description: Indicates another error (unspecific internal error)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
        '503':
          description: The system is not in running mode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOthers'
components:
  schemas:
    ResponseOthers:
      type: object
      properties:
        message:
          type: string
        link:
          type: string
    coreIdModel:
      type: object
      required:
        - id
      properties:
        id:
          type: string
    coreNameModel:
      type: object
      required:
        - name
      properties:
        name:
          type: string
    corePasswordModel:
      type: object
      required:
        - password
      properties:
        password:
          type: string
    coreUserModel:
      allOf:
        - $ref: '#/components/schemas/coreNameModel'
        - type: object
          required:
            - description
            - userType
            - id
          properties:
            id:
              type: string
            description:
              type: string
            userType:
              type: string
              enum:
                - Internal
                - External
    coreUserBodyModel:
      type: object
      required:
        - firstName
        - lastName
        - description
        - userType
        - organization
        - department
        - location
        - state
        - countryCode
        - phone
        - email
        - extra1
        - extra2
      properties:
        firstName:
          type: string
        lastName:
          type: string
        description:
          type: string
        userType:
          type: string
          enum:
            - Internal
            - External
        organization:
          type: string
        department:
          type: string
        location:
          type: string
        state:
          type: string
        countryCode:
          type: string
        phone:
          type: string
        email:
          type: string
          format: email
        extra1:
          type: string
        extra2:
          type: string
    coreUserDescription:
      type: object
      required:
        - description
      properties:
        description:
          type: string
    corePkiSessionModel:
      type: object
      required:
        - pkiSessionId
      properties:
        pkiSessionId:
          type: string
    coreUsers:
      allOf:
        - $ref: '#/components/schemas/coreUserModel'
        - type: object
          required:
            - certificatesStatus
            - outgoingCertActive
            - groups
          properties:
            certificatesStatus:
              type: string
              enum:
                - Expired
                - AboutToExpire
                - Good
                - Missing
              description: >-
                Expired - at least one of the user’s certificate is expired;
                AboutToExpire - at least one user certificate will expire in
                less than 90 days; Good - all user’s certificate do have this
                state.
            outgoingCertActive:
              type: boolean
            groups:
              type: string
    coreUserToCreate:
      allOf:
        - $ref: '#/components/schemas/coreNameModel'
        - $ref: '#/components/schemas/corePasswordModel'
        - $ref: '#/components/schemas/coreUserBodyModel'
        - $ref: '#/components/schemas/corePkiSessionModel'
    coreUserToRetrieve:
      allOf:
        - $ref: '#/components/schemas/coreNameModel'
        - $ref: '#/components/schemas/coreUserBodyModel'
    coreUserToModify:
      allOf:
        - $ref: '#/components/schemas/corePasswordModel'
        - $ref: '#/components/schemas/coreUserBodyModel'
        - $ref: '#/components/schemas/corePkiSessionModel'
    coreUserPartOfGroupsToRetrieve:
      type: array
      items:
        $ref: '#/components/schemas/coreNameModel'
    coreUserPartOfGroupsToModify:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/coreNameModel'
          - type: object
            required:
              - assign
            properties:
              assign:
                type: boolean
    coreUserContextToRetrieve:
      type: array
      items:
        required:
          - context-type
          - name
        properties:
          context-type:
            type: string
            example: OPC UA Client Connections
          name:
            type: array
            example:
              - Connection A
              - Connection B
              - Connection C
            items:
              type: string
    coreGroupsToRetrieve:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/coreNameModel'
    coreGroupToCreate:
      type: object
      required:
        - groupName
      properties:
        groupName:
          type: string
    coreUsersFromGroupToRetrieve:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/coreNameModel'
    coreUserAddedToGroup:
      allOf:
        - $ref: '#/components/schemas/coreIdModel'
    coreFileModel:
      type: string
      format: binary
    coreNameValueModel:
      allOf:
        - $ref: '#/components/schemas/coreNameModel'
        - type: object
          required:
            - value
          properties:
            value:
              type: string
    coreEditUserCertificateRequest:
      type: object
      required:
        - user
      properties:
        user:
          type: string
    coreEditUserCertificateRespons:
      allOf:
        - $ref: '#/components/schemas/corePkiSessionModel'
    coreEditUserCertificateUploadRequest:
      type: object
      required:
        - type
        - password
      properties:
        description:
          type: string
        password:
          type: string
    coreCertificateDetails:
      type: object
      required:
        - description
        - serialNumber
        - validFrom
        - validTo
        - thumbprint
        - validityStatus
        - private-key-available
        - is-default-outgoing
        - subject
        - issuer
        - subjectAlternativeName
        - keyUsages
      properties:
        description:
          type: string
        serialNumber:
          type: string
        validFrom:
          type: string
        validTo:
          type: string
        thumbprint:
          type: string
        validityStatus:
          type: string
          description: >-
            The possible values for "validityStatus" are "Good", "AboutToExpire"
            (will expire in less than 90 days from now) , "Expired" (already
            expired)
        private-key-available:
          type: boolean
        is-default-outgoing:
          type: boolean
          description: >-
            At most one certificate shall have „is-default-outgoing“ on true.
            That certificate shall also have „private-key-available“ = true.
        subject:
          type: array
          description: >-
            Each "name" part in "subjectDN" and "issuerDN" may be "C" =country,
            "S" = state/county, "L" = locality (city), "O" =organization, "OU" =
            organization unit (department), etc. Some information is duplicate,
            because of historical reasons (e.g, "subjectName" is the same as
            "CN" under "subjectDN")
          items:
            allOf:
              - $ref: '#/components/schemas/coreNameValueModel'
        issuer:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/coreNameValueModel'
        subjectAlternativeName:
          type: array
          description: Each "name" part in "subjectAlternateName" may be "URL", "DNS", etc
          items:
            allOf:
              - $ref: '#/components/schemas/coreNameValueModel'
        keyUsages:
          type: array
          items:
            type: string
    coreCertificatesDetailsResponse:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/coreCertificateDetails'
    coreCertificateToCreate:
      type: object
      required:
        - description
        - password
        - country
        - state-or-province
        - organization
        - organization-unit
        - common-name
        - email
        - locality
        - valid-days
      properties:
        description:
          type: string
        password:
          type: string
          description: >-
            Password must be either empty (no password) or otherwise between 4
            and 1023 characters in length
        country:
          type: string
          description: Country must be either empty or a 2-characters ISO country code
        state-or-province:
          type: string
          description: >-
            State-or-provence and locality must be UTF-8 strings of at most 128
            characters (code points are numbered)
        organization:
          type: string
          description: >-
            Organization, organization-unit, and common-name are UTF-8 strings
            of at most 64 characters
        organization-unit:
          type: string
        common-name:
          type: string
        email:
          type: string
          description: >-
            Email must be a valid e-mail of at most 128 characters (no non-ASCII
            characters are allowed)
        locality:
          type: string
        valid-days:
          type: integer
          description: >-
            Valid-days must be between 0 and 24855 (2^31-1 seconds, or
            approximately 86 years)
    coreEditUserCertificateDefaultOutgoing:
      type: object
      required:
        - default-outgoing
      properties:
        default-outgoing:
          type: string
    LDAPConfigBody:
      type: object
      required:
        - profileName
        - serverAddress
        - port
        - searchBase
        - enabled
        - searchingUserDN
        - searchingUserPassword
        - secure
        - validateServerCertificate
      properties:
        profileName:
          type: string
          enum:
            - main
            - backup
        serverAddress:
          type: string
        port:
          type: integer
        searchBase:
          type: string
        enabled:
          type: boolean
          description: >-
            The default value for 'enabled' member is false (LDAP server not
            used)
        searchingUserDN:
          type: string
        searchingUserPassword:
          type: string
        secure:
          type: boolean
        validateServerCertificate:
          type: boolean
    LDAPConfigPutBody:
      type: object
      properties:
        pkiSessionId:
          type: string
          description: >-
            Member pkiSessionId is a GUID specifing a PKI Store previosly
            created to be used for secure connection.It is generally optional,
            but mandatory if 'secure' was set to true.
      allOf:
        - $ref: '#/components/schemas/LDAPConfigBody'
    coreSystemStatus:
      type: object
      required:
        - status
      properties:
        status:
          type: string
    coreSystemNetif:
      type: object
      required:
        - fqdn
        - hostname
        - ipv4
        - ipv6
      properties:
        fqdn:
          type: string
          description: full hostname identification
        hostname:
          type: string
          description: hostname
        ipv4:
          type: array
          items:
            properties:
              NetworkInterface:
                type: string
                description: IPv4 address
        ipv6:
          type: array
          items:
            properties:
              NetworkInterface:
                type: string
                description: IPv6 address
    coreLogsModel:
      type: array
      items:
        required:
          - FileName
          - Timestamp
        properties:
          FileName:
            type: string
            example: "Raven\_20160608144843143.log"
          Timestamp:
            type: string
            example: '2016-06-08T11:48:43.000Z'
    coreAuditModel:
      type: object
      required:
        - auditMinFilesSize
        - auditMaxFilesSize
        - auditMinFileNumber
        - auditMaxFileNumber
      properties:
        auditMinFilesSize:
          type: integer
        auditMaxFilesSize:
          type: integer
        auditMinFileNumber:
          type: integer
        auditMaxFileNumber:
          type: integer
    coreAuditLogSettingsToRetrieve:
      allOf:
        - type: object
          required:
            - auditToFile
            - auditFileSize
            - auditFileNumber
          properties:
            auditToFile:
              type: boolean
            auditFileSize:
              type: integer
            auditFileNumber:
              type: integer
        - $ref: '#/components/schemas/coreAuditModel'
    coreAuditLogSettingsToSet:
      type: object
      required:
        - auditToFile
        - auditFileNumber
        - auditFileSize
      properties:
        auditToFile:
          type: boolean
        auditFileNumber:
          type: integer
        auditFileSize:
          type: integer
    coreAuditFilesToRetrieve:
      type: array
      items:
        required:
          - FileName
          - Timestamp
        properties:
          FileName:
            type: string
            example: Raven\_20160608144843143.log
          Timestamp:
            type: string
            example: '2016-06-08T11:48:43.000Z'
    coreInstalledLicensesToRetrieve:
      type: array
      required:
        - availableslots
        - feature
        - totalslots
      items:
        properties:
          availableslots:
            type: integer
          feature:
            type: string
          totalslots:
            type: integer
    coreLicenseDetails:
      type: object
      required:
        - data
        - type
      properties:
        data:
          type: array
          items:
            type: object
        type:
          type: string
    coreFloatingServerModel:
      type: array
      items:
        required:
          - URL
          - port
          - enabled
        properties:
          URL:
            type: string
          port:
            type: integer
          enabled:
            type: boolean
    coreFloatingServerToRetrieve:
      allOf:
        - $ref: '#/components/schemas/coreFloatingServerModel'
    coreFloatingServerToConfigure:
      allOf:
        - $ref: '#/components/schemas/coreFloatingServerModel'
    coreVersionToRetrieve:
      type: object
      required:
        - version
      properties:
        version:
          type: string
    coreApplicationModel:
      type: object
      required:
        - appName
        - location
        - company
        - department
        - contactPersonName
        - contactPersonEmail
      properties:
        appName:
          type: string
          example: edgeConnector <prod>
        location:
          type: string
          example: Munich
        company:
          type: string
          example: Softing IA GmbH
        department:
          type: string
          example: Service
        contactPersonName:
          type: string
          example: Mr. Smith
        contactPersonEmail:
          type: string
          example: example@example.com
    coreApplicationSettingsToRetrieve:
      allOf:
        - $ref: '#/components/schemas/coreApplicationModel'
        - type: object
          properties:
            countryCode:
              type: string
              example: DE
            state:
              type: string
              example: Bavaria
    coreApplicationSettingsToSet:
      allOf:
        - $ref: '#/components/schemas/coreApplicationModel'
    coreConfigAutoBackupSettingsModel:
      type: object
      required:
        - enabled
        - maxNrOfBackups
      properties:
        enabled:
          type: boolean
        maxNrOfBackups:
          type: integer
    coreConfigurationPredefinedToRetrieve:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/coreNameModel'
    coreConfigurationInternalToRetrieve:
      allOf:
        - $ref: '#/components/schemas/coreConfigurationPredefinedToRetrieve'
    coreConfigAutoBackupSettingsToRetrieve:
      allOf:
        - $ref: '#/components/schemas/coreConfigAutoBackupSettingsModel'
    coreConfigAutoBackupSettingsToSet:
      allOf:
        - $ref: '#/components/schemas/coreConfigAutoBackupSettingsModel'
    httpuaserverBrowseRequest:
      type: object
      required:
        - SessionName
        - NodeIds
        - AdditionalAttributes
      properties:
        SessionName:
          type: string
        NodeIds:
          type: array
          items:
            type: string
        AdditionalAttributes:
          type: array
          items:
            type: string
    httpuaserverBrowseResponse:
      type: array
      items:
        required:
          - DisplayName
          - NodeClass
          - NodeId
        properties:
          DisplayName:
            type: string
          NodeClass:
            type: string
          NodeId:
            type: string
    mqttEnabledState:
      type: object
      required:
        - enabled
      properties:
        enabled:
          type: boolean
    mqttCommonSettings:
      type: object
      required:
        - clientIdPrefix
      properties:
        clientIdPrefix:
          type: string
    mqttTestConnectionPost:
      type: object
      required:
        - connectionName
        - protocol
        - hostname
        - port
        - mqttVersion
        - enabled
        - connectionState
        - clientId
        - trustedCertificatesOnly
        - authenticationType
        - username
        - lastWillTestament
        - advancedSettings
      properties:
        connectionName:
          type: string
        protocol:
          type: string
          enum:
            - tcp
            - ssl
            - ws
            - wss
        hostname:
          type: string
        port:
          type: integer
        enabled:
          type: boolean
        mqttVersion:
          type: string
          enum:
            - v3_auto_mode
            - v3_1
            - v3_1_1
            - v5
        connectionState:
          type: string
          enum:
            - connected
            - disconnected
        clientId:
          type: string
        trustedCertificatesOnly:
          type: boolean
        authenticationType:
          type: string
          enum:
            - anonymous
            - username
            - certificate
            - username_certificate
        username:
          type: string
        lastWillTestament:
          type: object
          required:
            - enabled
            - message
            - retain
            - topicName
          properties:
            enabled:
              type: boolean
            message:
              type: string
            retain:
              type: boolean
            topicName:
              type: string
        advancedSettings:
          type: object
          required:
            - cleanSession
            - connectionTimeout
            - keepAlive
            - persistanceInFS
          properties:
            cleanSession:
              type: boolean
            connectionTimeout:
              type: integer
            keepAlive:
              type: integer
    mqttTestConnectionGet:
      type: object
      required:
        - connectionSuccess
        - commonDetails
        - mqttVersion
        - errorMessage
        - errorCode
        - errorText
      properties:
        connectionSuccess:
          type: boolean
          description: >-
            Where connectionSuccess marks whether the connection call succeeded
            or not. In case the value is true, the mqttVersion is relevant only.
            In case the value is false, the other members (prefixed with error)
            are relevant and must be displayed.
        commonDetails:
          type: array
          description: >-
            The commonDetails shall be always displayed. It contains some
            information from the used Paho library.
          items:
            type: object
            required:
              - infoPos
              - infoKey
              - infoVa
            properties:
              infoPos:
                type: integer
              infoKey:
                type: string
              infoVa:
                type: string
        mqttVersion:
          type: string
        errorMessage:
          type: string
        errorCode:
          type: string
        errorText:
          type: string
    mqttConnectionName:
      type: object
      required:
        - connectionName
      properties:
        connectionName:
          type: string
    variableDisplayPath:
      type: array
      items:
        type: object
        properties:
          type:
            type: string
            enum:
              - placeholder
              - string
          value:
            type: string
            description: >-
              The field "payloadDefinition/destinations/displayPath/value" is
              not present if "payloadDefinition/destinations/displayPath/type"
              is "placeholder".
          displayNameElements:
            type: array
            items:
              type: object
              properties:
                type:
                  type: string
                  enum:
                    - keyName
                    - string
                value:
                  type: string
    mqttConnection:
      type: object
      required:
        - connectionName
        - protocol
        - hostname
        - port
        - mqttVersion
        - enabled
        - connectionState
        - clientId
        - trustedCertificatesOnly
        - authenticationType
        - username
        - lastWillTestament
        - advancedSettings
      properties:
        connectionName:
          type: string
        protocol:
          type: string
          enum:
            - tcp
            - ssl
            - ws
            - wss
        hostname:
          type: string
        port:
          type: integer
        enabled:
          type: boolean
        mqttVersion:
          type: string
          enum:
            - v3_auto_mode
            - v3_1
            - v3_1_1
            - v5
        connectionState:
          type: string
          enum:
            - connected
            - disconnected
        clientId:
          type: string
        trustedCertificatesOnly:
          type: boolean
        authenticationType:
          type: string
          enum:
            - anonymous
            - username
            - certificate
            - username_certificate
        username:
          type: string
        lastWillTestament:
          type: object
          required:
            - enabled
            - message
            - retain
            - topicName
          properties:
            enabled:
              type: boolean
            message:
              type: string
            retain:
              type: boolean
            topicName:
              type: string
        advancedSettings:
          type: object
          required:
            - cleanSession
            - connectionTimeout
            - keepAlive
            - persistanceInFS
          properties:
            cleanSession:
              type: boolean
            connectionTimeout:
              type: integer
            keepAlive:
              type: integer
            maxBufferedMessages:
              type: integer
            persistanceInFS:
              type: boolean
    mqttConnectionGet:
      type: object
      required:
        - advancedSettings
        - authenticationType
        - clientId
        - connectionName
        - connectionState
        - enabled
        - hasPublishers
        - hostname
        - lastWillTestament
        - pkiStore
        - port
        - protocol
        - mqttVersion
        - proxySettings
        - suffix
        - trustedCertificatesOnly
        - userId
      properties:
        advancedSettings:
          type: object
          required:
            - cleanSession
            - connectionTimeout
            - keepAlive
            - persistanceInFS
          properties:
            cleanSession:
              type: boolean
            connectionTimeout:
              type: integer
            keepAlive:
              type: integer
            maxBufferedMessages:
              type: integer
            persistanceInFS:
              type: boolean
        authenticationType:
          type: string
        clientId:
          type: string
        connectionName:
          type: string
        connectionState:
          type: string
        enabled:
          type: boolean
        hasPublishers:
          type: boolean
        hostname:
          type: string
        mqttVersion:
          type: string
          enum:
            - v3_auto_mode
            - v3_1
            - v3_1_1
            - v5
        lastWillTestament:
          type: object
          required:
            - enabled
            - message
            - retain
            - topicName
          properties:
            enabled:
              type: boolean
            message:
              type: string
            retain:
              type: boolean
            topicName:
              type: string
        pkiStore:
          type: string
        port:
          type: integer
        protocol:
          type: string
        proxySettings:
          type: object
          required:
            - URL
            - password
            - port
            - proxyType
            - useAuthentication
            - username
          properties:
            URL:
              type: string
            password:
              type: string
            port:
              type: integer
            proxyType:
              type: string
              enum:
                - none
                - socks
                - http
            useAuthentication:
              type: boolean
            username:
              type: string
        suffix:
          type: string
        trustedCertificatesOnly:
          type: boolean
        userId:
          type: string
    mqttConnections:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/mqttConnectionGet'
    mqttSubscribeGet:
      type: object
      required:
        - addressSpace
        - connectionName
        - enabled
        - mqttQoS
        - payloadDefinition
        - payloadFormat
        - requestName
        - topicName
      properties:
        addressSpace:
          type: string
          description: >-
            The "addressSpace" field is only stored by the Mqtt module and it is
            not validated or used in any way.The caller is responsible to manage
            the session type to address space mapping(see
            runtime/uacore/sights/conn-filtering/sessions-mapping).The session
            type for a publish request is the name of the publish request,
            prefixed by "MqttSubscriber\_".
        connectionName:
          type: string
        enabled:
          type: boolean
        mqttQoS:
          type: string
          enum:
            - Level0_AtMostOnce
            - Level1_AtLeastOnce
            - Level2_ExactlyOnce
        payloadDefinition:
          type: array
          items:
            type: string
        payloadFormat:
          type: string
        requestName:
          type: string
        topicName:
          type: string
    subscribeRequestIdModel:
      type: object
      required:
        - requestId
      properties:
        requestId:
          type: string
          description: >-
            The "requestId" member is a generated unique id (GUID). It is used
            as a key to reference the Subscribe Request in a Publish Request
            triggered by MQTT definition ("dataRowTrigger"="mqttTriggered")
    mqttSubscribeRequestBodyModel:
      type: object
      required:
        - connectionName
        - requestName
        - enabled
        - topicName
        - addressSpace
        - mqttQoS
        - payloadDefinition
      properties:
        connectionName:
          type: string
        requestName:
          type: string
        enabled:
          type: boolean
        topicName:
          type: string
        addressSpace:
          type: string
        mqttQoS:
          type: string
        payloadDefinition:
          type: array
          items:
            type: object
            required:
              - path
              - destinations
              - displayNameElements
            properties:
              path:
                type: array
                items:
                  anyOf:
                    - type: string
                    - type: integer
              destinations:
                type: array
                items:
                  type: object
                  required:
                    - sourceData
                  properties:
                    sourceData:
                      type: string
                      enum:
                        - json-value
                        - nothing
                    nodeId:
                      type: string
                      description: >-
                        The fields "nodeId" and "displayPath" are semantically
                        mutually exclusive.Use "nodeId" for the case a
                        destination is fully specified by its nodeId.Use
                        "displayPath" for the case a destination is specified by
                        its displayPath (with placeholders).
                    displayPath:
                      allOf:
                        - $ref: '#/components/schemas/variableDisplayPath'
                    attributeId:
                      type: string
                      enum:
                        - Value
                    placeholder:
                      type: string
                      description: >-
                        The "placeholder" member is a string in which the caller
                        can serialize any useful information linked to the
                        current destination. It will be just stored by the Mqtt
                        module and it is not validated, nor used, in any way.
    mqttSubscribeRequestToCreate:
      allOf:
        - $ref: '#/components/schemas/mqttSubscribeRequestBodyModel'
    mqttSubscribeRequests:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/subscribeRequestIdModel'
          - $ref: '#/components/schemas/mqttSubscribeRequestBodyModel'
    mqttSubscribeRequestBrief:
      type: object
      required:
        - connectionName
        - requestName
        - enabled
        - topicName
        - mqttQoS
      properties:
        connectionName:
          type: string
        requestName:
          type: string
        enabled:
          type: boolean
        topicName:
          type: string
        mqttQoS:
          type: string
    mqttSubscribeRequestsBrief:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/subscribeRequestIdModel'
          - $ref: '#/components/schemas/mqttSubscribeRequestBrief'
    mqttPublishRequest:
      type: object
      required:
        - requestName
        - enabled
        - topicName
        - addressSpace
        - mqttQoS
        - publishInterval
        - publishingMode
        - dataRowTrigger
        - samplingInterval
        - payloadFormat
        - template
        - placeholders
      properties:
        requestName:
          type: string
        enabled:
          type: boolean
        topicName:
          type: string
        addressSpace:
          type: string
          description: >-
            The "addressSpace" field is only stored by the Mqtt module and it is
            not validated or used in any way. The caller is responsible to
            manage the session type to address space mapping (see
            runtime/uacore/sights/conn-filtering/sessions-mapping). The session
            type for a publish request is the name of the publish request,
            prefixed by "MqttPublisher_".
        mqttQoS:
          type: string
          enum:
            - Level0_AtMostOnce
            - Level1_AtLeastOnce
            - Level2_ExactlyOnce
        publishInterval:
          type: integer
        publishingMode:
          type: string
          enum:
            - multipleSamples
            - singleSample
            - alarmMode
        dataRowTrigger:
          type: string
          enum:
            - samplingTimer
            - dataChange
            - conditionalSamplingTimer
            - conditionalTrigger
            - advancedTrigger
            - mqttTriggered
          description: >-
            samplingTimer (cannot be used with publishingMode = alarmMode);
            dataChange (this is the only acceptable one for publishingMode =
            alarmMode); conditionalSamplingTimer (cannot be used with
            publishingMode = alarmMode); conditionalTrigger (can be used only
            with  publishingMode = singleSample); advancedTrigger (can be used
            only with  publishingMode = singleSample); mqttTriggered (can be
            used only with  publishingMode = singleSample). For the case
            publisher is configured with dataRowTrigger=mqttTriggered the
            content of the previously described placeholders may have some
            particularities. Elements with the type=data could be defined with
            the display path instead of the node id. In this case, those entries
            wil be changed as follows "ancestors" member is not present and
            "nodeId" element is replaced by a new 'displayPath' member of type
            array.
        dataRowTimeout:
          type: integer
          description: >-
            The field "dataRowTimeout" only makes sense for
            "dataRowTrigger"=["conditionalTrigger"|"mqttTriggered"|"advancedTrigger"]
            and specifies the max time to wait for the read of the data in the
            payload to complete.
        mqttTriggerSubscriberId:
          type: string
          description: >-
            The field "mqttTriggerSubscriberId" only makes sense for
            "dataRowTrigger"="mqttTriggered" and specifies the id of the
            configured Mqtt Subscribe request to be used as a trigger for the
            current publisher
        samplingInterval:
          type: integer
          description: >-
            The field "samplingInterval" makes no sense for "publishingMode"
            other than "multipleSamples".
        payloadFormat:
          type: string
          enum:
            - json
            - text(not implemented yet)
            - xml(not implemented yet)
        template:
          type: string
          description: >-
            The field "template" contains the template for the publish message,
            with placeholders in the format "@name@".
          example: >-
            {"topic":"@topic@", "timestamp":"@ts@", "data":{"pos":"@pos@",
            "motorRPM":"@motorRPM@"}}
        placeholders:
          type: object
          description: >-
            The filed "placeholders" contains an array of objects defining each
            a variable node in the address space.
          properties:
            type:
              type: string
              enum:
                - topicName
                - clientId
                - timestamp
                - data
            displayName:
              type: string
              description: >-
                the 'key' of this placeholder; it is used as display name in the
                GUI; LUA script uses this key as an argument for the exposed LUA
                API for retrieving the value for the current variable node.
            script:
              type: string
              description: >-
                The filed "script" contains the code to be executed by LUA as a
                string
            timeZone:
              type: string
              enum:
                - utc
                - local
              description: >-
                for "type"="timestamp", a string with possible values "utc" and
                "local";
            nodeId:
              type: string
              description: >-
                a string containing the node ID of the variable node(e.g.,
                "nodeId":"ns=4;s=SomeNode"). For "type"="data", a string
                containing the node ID of the node whose value is to be replaced
                (e.g., "nodeId":"ns=4;s=SomeNode").
            ancestors:
              type: array
              description: >-
                for "type"="data", a list of strings representing the node IDs
                of the ancestors of the subscribed node. This is for GUI usage
                only; the backend will simply store and retrieve it back.
              items:
                type: string
            attributeId:
              type: string
              enum:
                - values(only this it is possible)
                - timestamp
                - quality
                - dataType
              description: >-
                a string containing the (pseudo-UA) attribute to be substituted
                here. For "type"="data", a string containing the (pseudo-UA)
                attribute to be substituted here. TBD fields describing the
                substitution rules for text and XML formats (how to deal with a
                missing value, arrays, etc)
            format:
              type: string
              enum:
                - defaultFormat
                - stringIsJson
              description: >-
                a string describing how the value is to be formatted in the
                publish message.
            displayPath:
              allOf:
                - $ref: '#/components/schemas/variableDisplayPath'
        triggerSource:
          type: object
          properties:
            nodeId:
              type: string
              description: >-
                The field "nodeId" of the "triggerSource" object  is a string
                containing the node ID of the variable to use as trigger (e.g.,
                "nodeId":"ns=4;s=SomeNode").
            attributeId:
              type: string
            samplingInterval:
              type: integer
              description: >-
                The field "samplingInterval" defines the sampling for the
                variable nodes involved in the logics of the advanced trigger
                (the placeholders below)
            uiData:
              nullable: true
              type: string
            addressSpace:
              type: string
              description: >-
                The field "addresSpace" defines the address space used to
                localize the variables nodes used in the trigger definition
            triggerValue:
              type: boolean
              description: >-
                The field "triggerValue" shall be used only for the trigger
                definition corresponding to
                "dataRowTrigger"="conditionalSamplingTimer".
            triggerEvent:
              type: string
              enum:
                - raising
                - falling
                - change
              description: >-
                The field "triggerEvent" shall be used only for the trigger
                definition corresponding to
                "dataRowTrigger"="conditionalTrigger".
            variableDetails:
              type: object
              properties:
                dataTypeNodeId:
                  type: string
                  description: >-
                    The field "dataTypeNodeId" of the "triggerSource" object  is
                    a string containing the node ID of the dataType of the
                    variable to use as trigger (e.g. "ns=0;i=1", or simply
                    "i=1").
                selectorPath:
                  type: array
                  description: >-
                    The field "selectorPath" only exists if the trigger logic is
                    fired by a sub-element of the variable (an index in case of
                    array variable or a struct member in case of structured data
                    type).
                  items:
                    type: string
    mqttPublishRequestWithConnName:
      type: object
      allOf:
        - $ref: '#/components/schemas/mqttConnectionName'
        - $ref: '#/components/schemas/mqttPublishRequest'
    mqttPublishRequests:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/mqttConnectionName'
          - $ref: '#/components/schemas/mqttPublishRequest'
    mqttPublishRequestsBrief:
      type: array
      items:
        required:
          - connectionName
          - requestName
          - enabled
          - topicName
          - mqttQoS
          - publishInterval
          - dataRowTrigger
      properties:
        connectionName:
          type: string
        requestName:
          type: string
        enabled:
          type: boolean
        topicName:
          type: string
        mqttQoS:
          type: string
        publishInterval:
          type: integer
        dataRowTrigger:
          type: string
    mqttDisplayname:
      type: object
      properties:
        displayName:
          type: string
        type:
          type: string
    mqttChildren:
      type: object
      properties:
        children:
          type: array
          items:
            properties:
              displayName:
                type: string
              timeZone:
                type: string
              type:
                type: string
    mqttSpecialPlaceholders:
      type: array
      items:
        anyOf:
          - $ref: '#/components/schemas/mqttDisplayname'
          - $ref: '#/components/schemas/mqttChildren'
          - properties:
              displayName:
                type: string
    opcuaserverAuthResetCert:
      type: array
      items:
        type: string
    opcuaserverEndpointUsers:
      type: array
      items:
        type: object
        properties:
          user:
            type: string
          certificate:
            type: string
          session:
            type: string
          enabled:
            type: boolean
    opcuaserverEndpointUser:
      type: object
      properties:
        enabled:
          type: boolean
        max-connections:
          type: integer
        session:
          type: string
        access:
          type: array
          items:
            type: string
    opcuaserverSpecificEndpoint:
      type: object
      properties:
        name:
          type: string
        endpoint-url:
          type: string
        enabled:
          type: boolean
        description:
          type: string
        max-connections:
          type: integer
        access:
          type: array
          items:
            type: string
        security:
          type: object
          properties:
            mode-none:
              type: boolean
              description: >-
                if mode-none = true -> policy-none has to be true; if mode-none
                = false -> policy-none has to be false
            mode-sign:
              type: boolean
              description: >-
                if mode-sign or/and mode-signAndEncrypt = true ->
                policy-basic128rsa15 or/and policy-basic256 or/and
                policy-basic256sha256 or/and policy-Aes128Sha256RsaOaep or/and
                policy-Aes256Sha256RsaPss has to be true
            mode-signAndEncrypt:
              type: boolean
              description: >-
                if mode-sign and mode-signAndEncrypt = false ->
                policy-basic128rsa15 and policy-basic256 or/and
                policy-basic256sha256 or/and policy-Aes128Sha256RsaOaep or/and
                policy-Aes256Sha256RsaPss has to be false
            policy-none:
              type: boolean
            policy-basic128rsa15:
              type: boolean
            policy-basic256:
              type: boolean
            policy-basic256sha256:
              type: boolean
            policy-Aes128Sha256RsaOaep:
              type: boolean
            policy-Aes256Sha256RsaPss:
              type: boolean
        authentication:
          type: object
          description: >-
            Authentication validity checks by at least one of none, credentials
            and certificate has to be true.
          properties:
            none:
              type: boolean
            credentials:
              type: boolean
            certificate:
              type: boolean
        advancedSettings:
          type: object
          properties:
            restrictedEndpointDesc:
              type: boolean
    opcuaserverSpecificEndpointWithPKI:
      type: object
      allOf:
        - $ref: '#/components/schemas/opcuaserverSpecificEndpoint'
        - type: object
          properties:
            pkiSessionId:
              type: string
              description: >-
                The temporary PKI with the given pkiSessionId is used as the
                initial PKI of the endpoint.If "pkiSessionId" is missing or if
                the temporary PKI does not contain an own certificate, a new
                certificate is automatically generated for the endpoint.The
                pkiSessionId is invalidated as a result of this call.Validity
                checks

                - Unique name

                - Correct endpoint format

                - „description“, „max-connections“, „access“ are optional

                - „access“ is a string array with values from the following set
                „Browse“, „Read“, „Write“, „Subscribe“, „Methods“
    opcuaserverConfiguredEndpoint:
      type: object
      properties:
        name:
          type: string
        endpoint-url:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        accessProtection:
          type: object
          properties:
            certificateStatus:
              type: boolean
            endpointStatus:
              type: boolean
            ipStatus:
              type: boolean
    opcuaserverConfiguredEndpoints:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/opcuaserverConfiguredEndpoint'
    opcuaserverDetailsUnsuccAuth:
      type: object
      properties:
        enabled:
          type: boolean
        maxAttemptsPerSecond:
          type: integer
          description: 0 = unlimeted
        permanentDisable:
          type: boolean
        disableTime:
          type: integer
          description: seconds
        disableIncreaseFold:
          type: integer
          description: times increase
    opcuaserverUnsuccAuthAttempts:
      type: object
      properties:
        perIP:
          allOf:
            - $ref: '#/components/schemas/opcuaserverDetailsUnsuccAuth'
        perCertificate:
          allOf:
            - $ref: '#/components/schemas/opcuaserverDetailsUnsuccAuth'
        perEndpoint:
          allOf:
            - $ref: '#/components/schemas/opcuaserverDetailsUnsuccAuth'
            - type: object
              properties:
                dropConnections:
                  type: boolean
    opcuaserverGetAuthAttempts:
      type: object
      properties:
        perIP:
          allOf:
            - $ref: '#/components/schemas/opcuaserverDetailsUnsuccAuth'
            - type: object
              description: list of currently blocked IPs
              properties:
                currentlyBlocked:
                  type: array
                  items:
                    type: string
        perCertificate:
          allOf:
            - $ref: '#/components/schemas/opcuaserverDetailsUnsuccAuth'
            - type: object
              properties:
                currentlyBlocked:
                  description: >-
                    each blocked certificate has the thumbprint to subject
                    common name
                  type: object
        perEndpoint:
          allOf:
            - $ref: '#/components/schemas/opcuaserverDetailsUnsuccAuth'
            - type: object
              properties:
                dropConnections:
                  type: boolean
            - type: object
              properties:
                currentlyBlocked:
                  type: boolean
    opcuaserverNameModel:
      type: object
      required:
        - name
      properties:
        name:
          type: string
    opcuaserverNameValueModel:
      allOf:
        - $ref: '#/components/schemas/opcuaserverNameModel'
        - type: object
          required:
            - value
          properties:
            value:
              type: string
    opcuaserverCertificateDetails:
      type: object
      required:
        - serialNumber
        - validFrom
        - validTo
        - thumbprint
        - subject
        - issuer
        - subjectAlternativeName
        - keyUsages
      properties:
        serialNumber:
          type: string
        validFrom:
          type: string
        validTo:
          type: string
        thumbprint:
          type: string
        subject:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/opcuaserverNameModel'
        issuer:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/opcuaserverNameModel'
        subjectAlternativeName:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/opcuaserverNameModel'
        keyUsages:
          type: array
          items:
            type: string
    opcuaserverPostAuthAttempts:
      type: object
      properties:
        perIP:
          allOf:
            - $ref: '#/components/schemas/opcuaserverDetailsUnsuccAuth'
        perCertificate:
          allOf:
            - $ref: '#/components/schemas/opcuaserverDetailsUnsuccAuth'
        perEndpoint:
          allOf:
            - $ref: '#/components/schemas/opcuaserverDetailsUnsuccAuth'
            - type: object
              properties:
                dropConnections:
                  type: boolean
    opcuaserverIpFilteringManag:
      type: object
      properties:
        enabled:
          type: boolean
        allowIpV4:
          type: boolean
        allowIpV6:
          type: boolean
        isBlackList:
          type: boolean
        ipRangeList:
          type: array
          items:
            properties:
              address:
                type: string
              description:
                type: string
              mask:
                type: string
    opcuaserverEnabledState:
      type: object
      required:
        - enabled
      properties:
        enabled:
          type: boolean
    opcuaserverCertificate:
      type: object
      properties:
        certificate:
          type: string
          format: binary
    opcuaserverUrl:
      type: object
      required:
        - url
      properties:
        url:
          type: string
    opcuaserverDiscovery:
      type: object
      required:
        - profile
        - certificate
      allOf:
        - $ref: '#/components/schemas/opcuaserverUrl'
        - type: object
          properties:
            profile:
              type: string
            certificate:
              type: string
    siemensS772ConnWithoutConnStatus:
      type: object
      required:
        - Address
        - ConfigurationCheckPeriod
        - ConnectionTimeout
        - Enabled
        - FolderLongNames
        - MaxExecutingServices
        - Name
        - Port
        - ReconnectRetryCounter
        - ReconnectRetryPeriod
        - RequestTimeout
        - ServiceTimeout
      properties:
        Address:
          type: string
        ConfigurationCheckPeriod:
          type: integer
        ConnectionTimeout:
          type: integer
        Enabled:
          type: boolean
        FolderLongNames:
          type: boolean
        MaxExecutingServices:
          type: integer
        Name:
          type: string
        Port:
          type: integer
        ReconnectRetryCounter:
          type: integer
        ReconnectRetryPeriod:
          type: integer
        RequestTimeout:
          type: integer
        ServiceTimeout:
          type: integer
    siemensS772Conn:
      type: object
      required:
        - Address
        - ConfigurationCheckPeriod
        - ConnectionStatus
        - ConnectionTimeout
        - Enabled
        - FolderLongNames
        - MaxExecutingServices
        - Name
        - Port
        - ReconnectRetryCounter
        - ReconnectRetryPeriod
        - RequestTimeout
        - ServiceTimeout
      properties:
        Address:
          type: string
        ConfigurationCheckPeriod:
          type: integer
        ConnectionStatus:
          type: boolean
        ConnectionTimeout:
          type: integer
        Enabled:
          type: boolean
        FolderLongNames:
          type: boolean
        MaxExecutingServices:
          type: integer
        Name:
          type: string
        Port:
          type: integer
        ReconnectRetryCounter:
          type: integer
        ReconnectRetryPeriod:
          type: integer
        RequestTimeout:
          type: integer
        ServiceTimeout:
          type: integer
        Simulation:
          type: boolean
    siemensS772Conns:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/siemensS772Conn'
    siemensS732ConnWithoutConnStatus:
      type: object
      required:
        - Name
        - Address
        - Enabled
        - ExpandArrays
        - Port
        - ConnectionTimeout
        - ReconnectRetryCounter
        - ReconnectRetryPeriod
        - RequestTimeout
        - MaxExecutingServices
        - ServiceTimeout
        - TSAPPLC
        - AMQPLC
        - SDFIFileName
      properties:
        Name:
          type: string
        Address:
          type: string
        Enabled:
          type: boolean
        ExpandArrays:
          type: boolean
        Port:
          type: integer
        ConnectionTimeout:
          type: integer
        ReconnectRetryCounter:
          type: integer
        ReconnectRetryPeriod:
          type: integer
        RequestTimeout:
          type: integer
        MaxExecutingServices:
          type: integer
        ServiceTimeout:
          type: integer
        TSAPPLC:
          type: string
        AMQPLC:
          type: integer
        SDFIFileName:
          type: string
    siemensS732Conn:
      type: object
      required:
        - Name
        - Address
        - Enabled
        - ExpandArrays
        - Port
        - ConnectionTimeout
        - ReconnectRetryCounter
        - ReconnectRetryPeriod
        - RequestTimeout
        - MaxExecutingServices
        - ServiceTimeout
        - TSAPPLC
        - AMQPLC
        - SDFIFileName
        - ConnectionStatus
      properties:
        Name:
          type: string
        Address:
          type: string
        Enabled:
          type: boolean
        ExpandArrays:
          type: boolean
        Port:
          type: integer
        ConnectionTimeout:
          type: integer
        ReconnectRetryCounter:
          type: integer
        ReconnectRetryPeriod:
          type: integer
        RequestTimeout:
          type: integer
        MaxExecutingServices:
          type: integer
        ServiceTimeout:
          type: integer
        TSAPPLC:
          type: string
        AMQPLC:
          type: integer
        SDFIFileName:
          type: string
        ConnectionStatus:
          type: boolean
    siemensS732Conns:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/siemensS732Conn'
    RequestRemote:
      type: object
      properties:
        deviceId:
          type: string
        moduleName:
          type: string
    Remote:
      type: object
      properties:
        id:
          type: string
        deviceId:
          type: string
        moduleName:
          type: string
        lastSynchronization:
          type: string
    Remotes:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Remote'
    ResponseRemoteSynchronize:
      type: object
      properties:
        id:
          type: string
        changesAppliedToRemote:
          type: number
        changesAppliedLocally:
          type: number
    ResponseNoGetMet:
      type: object
      properties:
        id:
          type: string
    ResponseGetConnectorsCloud:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ConnectorCloud'
    ResponseGetConnectorsOnPremise:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ConnectorOnPremise'
    RequestConnectorCloud:
      type: object
      properties:
        host:
          type: string
          format: uri
          example: <protocol>://<hostname/ip>:<port>
        name:
          type: string
        productType:
          type: string
          enum:
            - edgeConnector Siemens
            - edgeConnector 840D
            - edgeConnector Modbus
            - edgeConnector Fanuc CNC
        parentId:
          type: string
        username:
          type: string
        password:
          type: string
    RequestConnectorOnPremise:
      type: object
      properties:
        host:
          type: string
          format: uri
          example: <protocol>://<hostname/ip>:<port>
        name:
          type: string
        productType:
          type: string
          enum:
            - edgeConnector Siemens
            - edgeConnector 840D
            - edgeConnector Modbus
            - edgeConnector Fanuc CNC
        username:
          type: string
        password:
          type: string
    ConnectorCloud:
      type: object
      properties:
        id:
          type: string
        host:
          type: string
          format: uri
          example: <protocol>://<hostname/ip>:<port>
        name:
          type: string
        productType:
          type: string
          enum:
            - edgeConnector Siemens
            - edgeConnector 840D
            - edgeConnector Modbus
            - edgeConnector Fanuc CNC
        parentId:
          type: string
        username:
          type: string
    ConnectorOnPremise:
      type: object
      properties:
        id:
          type: string
        host:
          type: string
          format: uri
          example: <protocol>://<hostname/ip>:<port>
        name:
          type: string
        productType:
          type: string
          enum:
            - edgeConnector Siemens
            - edgeConnector 840D
            - edgeConnector Modbus
            - edgeConnector Fanuc CNC
        username:
          type: string
    ConfigurationCloud:
      type: object
      properties:
        logLevel:
          type: string
    ConfigurationOnPremise:
      type: object
      properties:
        autoDiscovery:
          type: boolean
        logLevel:
          type: string
    Credentials:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
    RefreshToken:
      type: object
      required:
        - refreshToken
      properties:
        refreshToken:
          type: string
    Token:
      allOf:
        - type: object
          properties:
            accessToken:
              type: string
        - $ref: '#/components/schemas/RefreshToken'
    UserId:
      type: object
      required:
        - id
      properties:
        id:
          type: string
    UserToGet:
      allOf:
        - $ref: '#/components/schemas/UserId'
        - type: object
          properties:
            email:
              type: string
              format: email
            role:
              type: string
            firstname:
              type: string
            lastname:
              type: string
            description:
              type: string
    UserToPost:
      type: object
      required:
        - email
        - password
        - role
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        role:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        description:
          type: string
    UserToPatch:
      type: object
      required:
        - email
        - password
        - role
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        role:
          type: string
        firstname:
          type: string
        lastname:
          type: string
    UsersToGet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/UserToGet'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
externalDocs:
  description: Quick start guide is provided at
  url: https://github.com/SoftingIndustrial/datafeed-edge-connector
